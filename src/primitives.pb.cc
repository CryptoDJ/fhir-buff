// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: primitives.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "primitives.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace fhirbuffs {

namespace {

const ::google::protobuf::Descriptor* Coding_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Coding_reflection_ = NULL;
const ::google::protobuf::Descriptor* CodeableConcept_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CodeableConcept_reflection_ = NULL;
const ::google::protobuf::Descriptor* Period_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Period_reflection_ = NULL;
const ::google::protobuf::Descriptor* Address_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Address_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Address_AddressUses_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Address_AddressTypes_descriptor_ = NULL;
const ::google::protobuf::Descriptor* HumanName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HumanName_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* HumanName_HumanNameUses_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ContactPoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContactPoint_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ContactPoint_AuthorReferences_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Contact_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Contact_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identifier_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identifier_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Identifier_IdentifierUses_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Organization_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Organization_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_primitives_2eproto() {
  protobuf_AddDesc_primitives_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "primitives.proto");
  GOOGLE_CHECK(file != NULL);
  Coding_descriptor_ = file->message_type(0);
  static const int Coding_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coding, system_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coding, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coding, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coding, display_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coding, userselected_),
  };
  Coding_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Coding_descriptor_,
      Coding::default_instance_,
      Coding_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coding, _has_bits_[0]),
      -1,
      -1,
      sizeof(Coding),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coding, _internal_metadata_),
      -1);
  CodeableConcept_descriptor_ = file->message_type(1);
  static const int CodeableConcept_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CodeableConcept, coding_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CodeableConcept, text_),
  };
  CodeableConcept_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CodeableConcept_descriptor_,
      CodeableConcept::default_instance_,
      CodeableConcept_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CodeableConcept, _has_bits_[0]),
      -1,
      -1,
      sizeof(CodeableConcept),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CodeableConcept, _internal_metadata_),
      -1);
  Period_descriptor_ = file->message_type(2);
  static const int Period_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Period, start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Period, end_),
  };
  Period_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Period_descriptor_,
      Period::default_instance_,
      Period_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Period, _has_bits_[0]),
      -1,
      -1,
      sizeof(Period),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Period, _internal_metadata_),
      -1);
  Address_descriptor_ = file->message_type(3);
  static const int Address_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, use_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, line_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, city_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, district_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, postalcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, country_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, period_),
  };
  Address_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Address_descriptor_,
      Address::default_instance_,
      Address_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, _has_bits_[0]),
      -1,
      -1,
      sizeof(Address),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, _internal_metadata_),
      -1);
  Address_AddressUses_descriptor_ = Address_descriptor_->enum_type(0);
  Address_AddressTypes_descriptor_ = Address_descriptor_->enum_type(1);
  HumanName_descriptor_ = file->message_type(4);
  static const int HumanName_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HumanName, use_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HumanName, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HumanName, family_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HumanName, given_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HumanName, prefix_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HumanName, suffix_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HumanName, period_),
  };
  HumanName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HumanName_descriptor_,
      HumanName::default_instance_,
      HumanName_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HumanName, _has_bits_[0]),
      -1,
      -1,
      sizeof(HumanName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HumanName, _internal_metadata_),
      -1);
  HumanName_HumanNameUses_descriptor_ = HumanName_descriptor_->enum_type(0);
  ContactPoint_descriptor_ = file->message_type(5);
  static const int ContactPoint_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactPoint, authorreference_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactPoint, authorstring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactPoint, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactPoint, text_),
  };
  ContactPoint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ContactPoint_descriptor_,
      ContactPoint::default_instance_,
      ContactPoint_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactPoint, _has_bits_[0]),
      -1,
      -1,
      sizeof(ContactPoint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactPoint, _internal_metadata_),
      -1);
  ContactPoint_AuthorReferences_descriptor_ = ContactPoint_descriptor_->enum_type(0);
  Contact_descriptor_ = file->message_type(6);
  static const int Contact_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, purpose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, telecom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, address_),
  };
  Contact_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Contact_descriptor_,
      Contact::default_instance_,
      Contact_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, _has_bits_[0]),
      -1,
      -1,
      sizeof(Contact),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, _internal_metadata_),
      -1);
  Identifier_descriptor_ = file->message_type(7);
  static const int Identifier_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identifier, use_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identifier, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identifier, system_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identifier, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identifier, period_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identifier, assigner_),
  };
  Identifier_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Identifier_descriptor_,
      Identifier::default_instance_,
      Identifier_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identifier, _has_bits_[0]),
      -1,
      -1,
      sizeof(Identifier),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identifier, _internal_metadata_),
      -1);
  Identifier_IdentifierUses_descriptor_ = Identifier_descriptor_->enum_type(0);
  Organization_descriptor_ = file->message_type(8);
  static const int Organization_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Organization, identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Organization, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Organization, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Organization, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Organization, telecom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Organization, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Organization, partof_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Organization, contact_),
  };
  Organization_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Organization_descriptor_,
      Organization::default_instance_,
      Organization_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Organization, _has_bits_[0]),
      -1,
      -1,
      sizeof(Organization),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Organization, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_primitives_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Coding_descriptor_, &Coding::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CodeableConcept_descriptor_, &CodeableConcept::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Period_descriptor_, &Period::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Address_descriptor_, &Address::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HumanName_descriptor_, &HumanName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ContactPoint_descriptor_, &ContactPoint::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Contact_descriptor_, &Contact::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Identifier_descriptor_, &Identifier::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Organization_descriptor_, &Organization::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_primitives_2eproto() {
  delete Coding::default_instance_;
  delete Coding_reflection_;
  delete CodeableConcept::default_instance_;
  delete CodeableConcept_reflection_;
  delete Period::default_instance_;
  delete Period_reflection_;
  delete Address::default_instance_;
  delete Address_reflection_;
  delete HumanName::default_instance_;
  delete HumanName_reflection_;
  delete ContactPoint::default_instance_;
  delete ContactPoint_reflection_;
  delete Contact::default_instance_;
  delete Contact_reflection_;
  delete Identifier::default_instance_;
  delete Identifier_reflection_;
  delete Organization::default_instance_;
  delete Organization_reflection_;
}

void protobuf_AddDesc_primitives_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020primitives.proto\022\tfhirbuffs\"^\n\006Coding\022"
    "\016\n\006system\030\001 \002(\t\022\017\n\007version\030\002 \002(\t\022\014\n\004code"
    "\030\003 \002(\t\022\017\n\007display\030\004 \002(\t\022\024\n\014userSelected\030"
    "\005 \002(\010\"B\n\017CodeableConcept\022!\n\006coding\030\001 \003(\013"
    "2\021.fhirbuffs.Coding\022\014\n\004text\030\002 \002(\t\"$\n\006Per"
    "iod\022\r\n\005start\030\001 \002(\003\022\013\n\003end\030\002 \002(\003\"\342\002\n\007Addr"
    "ess\022+\n\003use\030\001 \002(\0162\036.fhirbuffs.Address.Add"
    "ressUses\022-\n\004type\030\002 \002(\0162\037.fhirbuffs.Addre"
    "ss.AddressTypes\022\014\n\004text\030\003 \002(\t\022\014\n\004line\030\004 "
    "\003(\t\022\014\n\004city\030\005 \002(\t\022\020\n\010district\030\006 \002(\t\022\r\n\005s"
    "tate\030\007 \002(\t\022\022\n\npostalCode\030\010 \002(\t\022\017\n\007countr"
    "y\030\t \002(\t\022!\n\006period\030\n \002(\0132\021.fhirbuffs.Peri"
    "od\"4\n\013AddressUses\022\010\n\004home\020\000\022\010\n\004work\020\001\022\010\n"
    "\004temp\020\002\022\007\n\003old\020\003\"2\n\014AddressTypes\022\n\n\006post"
    "al\020\000\022\014\n\010physical\020\001\022\010\n\004both\020\002\"\222\002\n\tHumanNa"
    "me\022/\n\003use\030\001 \002(\0162\".fhirbuffs.HumanName.Hu"
    "manNameUses\022\014\n\004text\030\002 \002(\t\022\016\n\006family\030\003 \003("
    "\t\022\r\n\005given\030\004 \003(\t\022\016\n\006prefix\030\005 \003(\t\022\016\n\006suff"
    "ix\030\006 \003(\t\022!\n\006period\030\007 \002(\0132\021.fhirbuffs.Per"
    "iod\"d\n\rHumanNameUses\022\t\n\005usual\020\000\022\014\n\010offic"
    "ial\020\001\022\010\n\004temp\020\002\022\014\n\010nickname\020\003\022\r\n\tanonymo"
    "us\020\004\022\007\n\003old\020\005\022\n\n\006maiden\020\006\"\324\001\n\014ContactPoi"
    "nt\022A\n\017authorReference\030\001 \001(\0162(.fhirbuffs."
    "ContactPoint.AuthorReferences\022\024\n\014authorS"
    "tring\030\002 \002(\t\022\014\n\004time\030\003 \001(\003\022\014\n\004text\030\004 \002(\t\""
    "O\n\020AuthorReferences\022\020\n\014Practitioner\020\000\022\013\n"
    "\007Patient\020\001\022\021\n\rRelatedPerson\020\002\022\t\n\005Other\020\003"
    "\"\251\001\n\007Contact\022+\n\007purpose\030\001 \002(\0132\032.fhirbuff"
    "s.CodeableConcept\022\"\n\004name\030\002 \002(\0132\024.fhirbu"
    "ffs.HumanName\022(\n\007telecom\030\003 \003(\0132\027.fhirbuf"
    "fs.ContactPoint\022#\n\007address\030\004 \002(\0132\022.fhirb"
    "uffs.Address\"\262\002\n\nIdentifier\0221\n\003use\030\001 \002(\016"
    "2$.fhirbuffs.Identifier.IdentifierUses\022("
    "\n\004type\030\002 \003(\0132\032.fhirbuffs.CodeableConcept"
    "\022\016\n\006system\030\003 \002(\t\022\r\n\005value\030\004 \002(\t\022!\n\006perio"
    "d\030\005 \002(\0132\021.fhirbuffs.Period\022)\n\010assigner\030\006"
    " \003(\0132\027.fhirbuffs.Organization\"Z\n\016Identif"
    "ierUses\022\t\n\005Usual\020\000\022\014\n\010Official\020\001\022\010\n\004Temp"
    "\020\002\022\r\n\tSecondary\020\003\022\013\n\007Unknown\020\004\022\t\n\005Other\020"
    "\005\"\236\002\n\014Organization\022)\n\nidentifier\030\001 \003(\0132\025"
    ".fhirbuffs.Identifier\022\016\n\006active\030\002 \002(\010\022(\n"
    "\004type\030\003 \002(\0132\032.fhirbuffs.CodeableConcept\022"
    "\014\n\004name\030\004 \002(\t\022(\n\007telecom\030\005 \003(\0132\027.fhirbuf"
    "fs.ContactPoint\022#\n\007address\030\006 \003(\0132\022.fhirb"
    "uffs.Address\022\'\n\006partOf\030\007 \001(\0132\027.fhirbuffs"
    ".Organization\022#\n\007contact\030\010 \003(\0132\022.fhirbuf"
    "fs.Contact", 1850);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "primitives.proto", &protobuf_RegisterTypes);
  Coding::default_instance_ = new Coding();
  CodeableConcept::default_instance_ = new CodeableConcept();
  Period::default_instance_ = new Period();
  Address::default_instance_ = new Address();
  HumanName::default_instance_ = new HumanName();
  ContactPoint::default_instance_ = new ContactPoint();
  Contact::default_instance_ = new Contact();
  Identifier::default_instance_ = new Identifier();
  Organization::default_instance_ = new Organization();
  Coding::default_instance_->InitAsDefaultInstance();
  CodeableConcept::default_instance_->InitAsDefaultInstance();
  Period::default_instance_->InitAsDefaultInstance();
  Address::default_instance_->InitAsDefaultInstance();
  HumanName::default_instance_->InitAsDefaultInstance();
  ContactPoint::default_instance_->InitAsDefaultInstance();
  Contact::default_instance_->InitAsDefaultInstance();
  Identifier::default_instance_->InitAsDefaultInstance();
  Organization::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_primitives_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_primitives_2eproto {
  StaticDescriptorInitializer_primitives_2eproto() {
    protobuf_AddDesc_primitives_2eproto();
  }
} static_descriptor_initializer_primitives_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Coding::kSystemFieldNumber;
const int Coding::kVersionFieldNumber;
const int Coding::kCodeFieldNumber;
const int Coding::kDisplayFieldNumber;
const int Coding::kUserSelectedFieldNumber;
#endif  // !_MSC_VER

Coding::Coding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fhirbuffs.Coding)
}

void Coding::InitAsDefaultInstance() {
}

Coding::Coding(const Coding& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fhirbuffs.Coding)
}

void Coding::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  system_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userselected_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Coding::~Coding() {
  // @@protoc_insertion_point(destructor:fhirbuffs.Coding)
  SharedDtor();
}

void Coding::SharedDtor() {
  system_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Coding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Coding::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Coding_descriptor_;
}

const Coding& Coding::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_primitives_2eproto();
  return *default_instance_;
}

Coding* Coding::default_instance_ = NULL;

Coding* Coding::New(::google::protobuf::Arena* arena) const {
  Coding* n = new Coding;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Coding::Clear() {
  if (_has_bits_[0 / 32] & 31u) {
    if (has_system()) {
      system_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_version()) {
      version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_code()) {
      code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_display()) {
      display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    userselected_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Coding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fhirbuffs.Coding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string system = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->system().data(), this->system().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Coding.system");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_version;
        break;
      }

      // required string version = 2;
      case 2: {
        if (tag == 18) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Coding.version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_code;
        break;
      }

      // required string code = 3;
      case 3: {
        if (tag == 26) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Coding.code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_display;
        break;
      }

      // required string display = 4;
      case 4: {
        if (tag == 34) {
         parse_display:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->display().data(), this->display().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Coding.display");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_userSelected;
        break;
      }

      // required bool userSelected = 5;
      case 5: {
        if (tag == 40) {
         parse_userSelected:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &userselected_)));
          set_has_userselected();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fhirbuffs.Coding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fhirbuffs.Coding)
  return false;
#undef DO_
}

void Coding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fhirbuffs.Coding)
  // required string system = 1;
  if (has_system()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->system().data(), this->system().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Coding.system");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->system(), output);
  }

  // required string version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Coding.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // required string code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Coding.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // required string display = 4;
  if (has_display()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->display().data(), this->display().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Coding.display");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->display(), output);
  }

  // required bool userSelected = 5;
  if (has_userselected()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->userselected(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fhirbuffs.Coding)
}

::google::protobuf::uint8* Coding::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fhirbuffs.Coding)
  // required string system = 1;
  if (has_system()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->system().data(), this->system().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Coding.system");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->system(), target);
  }

  // required string version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Coding.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // required string code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Coding.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // required string display = 4;
  if (has_display()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->display().data(), this->display().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Coding.display");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->display(), target);
  }

  // required bool userSelected = 5;
  if (has_userselected()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->userselected(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fhirbuffs.Coding)
  return target;
}

int Coding::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_system()) {
    // required string system = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system());
  }

  if (has_version()) {
    // required string version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  if (has_code()) {
    // required string code = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  if (has_display()) {
    // required string display = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display());
  }

  if (has_userselected()) {
    // required bool userSelected = 5;
    total_size += 1 + 1;
  }

  return total_size;
}
int Coding::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string system = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system());

    // required string version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());

    // required string code = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());

    // required string display = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display());

    // required bool userSelected = 5;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Coding::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Coding* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Coding>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Coding::MergeFrom(const Coding& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_system()) {
      set_has_system();
      system_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_);
    }
    if (from.has_version()) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (from.has_code()) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (from.has_display()) {
      set_has_display();
      display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_);
    }
    if (from.has_userselected()) {
      set_userselected(from.userselected());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Coding::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coding::CopyFrom(const Coding& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coding::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void Coding::Swap(Coding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Coding::InternalSwap(Coding* other) {
  system_.Swap(&other->system_);
  version_.Swap(&other->version_);
  code_.Swap(&other->code_);
  display_.Swap(&other->display_);
  std::swap(userselected_, other->userselected_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Coding::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Coding_descriptor_;
  metadata.reflection = Coding_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Coding

// required string system = 1;
bool Coding::has_system() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Coding::set_has_system() {
  _has_bits_[0] |= 0x00000001u;
}
void Coding::clear_has_system() {
  _has_bits_[0] &= ~0x00000001u;
}
void Coding::clear_system() {
  system_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_system();
}
 const ::std::string& Coding::system() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Coding.system)
  return system_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Coding::set_system(const ::std::string& value) {
  set_has_system();
  system_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Coding.system)
}
 void Coding::set_system(const char* value) {
  set_has_system();
  system_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Coding.system)
}
 void Coding::set_system(const char* value, size_t size) {
  set_has_system();
  system_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Coding.system)
}
 ::std::string* Coding::mutable_system() {
  set_has_system();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Coding.system)
  return system_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Coding::release_system() {
  clear_has_system();
  return system_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Coding::set_allocated_system(::std::string* system) {
  if (system != NULL) {
    set_has_system();
  } else {
    clear_has_system();
  }
  system_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Coding.system)
}

// required string version = 2;
bool Coding::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Coding::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void Coding::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void Coding::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
 const ::std::string& Coding::version() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Coding.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Coding::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Coding.version)
}
 void Coding::set_version(const char* value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Coding.version)
}
 void Coding::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Coding.version)
}
 ::std::string* Coding::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Coding.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Coding::release_version() {
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Coding::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Coding.version)
}

// required string code = 3;
bool Coding::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Coding::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
void Coding::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
void Coding::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
 const ::std::string& Coding::code() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Coding.code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Coding::set_code(const ::std::string& value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Coding.code)
}
 void Coding::set_code(const char* value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Coding.code)
}
 void Coding::set_code(const char* value, size_t size) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Coding.code)
}
 ::std::string* Coding::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Coding.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Coding::release_code() {
  clear_has_code();
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Coding::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Coding.code)
}

// required string display = 4;
bool Coding::has_display() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Coding::set_has_display() {
  _has_bits_[0] |= 0x00000008u;
}
void Coding::clear_has_display() {
  _has_bits_[0] &= ~0x00000008u;
}
void Coding::clear_display() {
  display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_display();
}
 const ::std::string& Coding::display() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Coding.display)
  return display_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Coding::set_display(const ::std::string& value) {
  set_has_display();
  display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Coding.display)
}
 void Coding::set_display(const char* value) {
  set_has_display();
  display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Coding.display)
}
 void Coding::set_display(const char* value, size_t size) {
  set_has_display();
  display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Coding.display)
}
 ::std::string* Coding::mutable_display() {
  set_has_display();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Coding.display)
  return display_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Coding::release_display() {
  clear_has_display();
  return display_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Coding::set_allocated_display(::std::string* display) {
  if (display != NULL) {
    set_has_display();
  } else {
    clear_has_display();
  }
  display_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Coding.display)
}

// required bool userSelected = 5;
bool Coding::has_userselected() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Coding::set_has_userselected() {
  _has_bits_[0] |= 0x00000010u;
}
void Coding::clear_has_userselected() {
  _has_bits_[0] &= ~0x00000010u;
}
void Coding::clear_userselected() {
  userselected_ = false;
  clear_has_userselected();
}
 bool Coding::userselected() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Coding.userSelected)
  return userselected_;
}
 void Coding::set_userselected(bool value) {
  set_has_userselected();
  userselected_ = value;
  // @@protoc_insertion_point(field_set:fhirbuffs.Coding.userSelected)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CodeableConcept::kCodingFieldNumber;
const int CodeableConcept::kTextFieldNumber;
#endif  // !_MSC_VER

CodeableConcept::CodeableConcept()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fhirbuffs.CodeableConcept)
}

void CodeableConcept::InitAsDefaultInstance() {
}

CodeableConcept::CodeableConcept(const CodeableConcept& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fhirbuffs.CodeableConcept)
}

void CodeableConcept::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CodeableConcept::~CodeableConcept() {
  // @@protoc_insertion_point(destructor:fhirbuffs.CodeableConcept)
  SharedDtor();
}

void CodeableConcept::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CodeableConcept::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CodeableConcept::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CodeableConcept_descriptor_;
}

const CodeableConcept& CodeableConcept::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_primitives_2eproto();
  return *default_instance_;
}

CodeableConcept* CodeableConcept::default_instance_ = NULL;

CodeableConcept* CodeableConcept::New(::google::protobuf::Arena* arena) const {
  CodeableConcept* n = new CodeableConcept;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CodeableConcept::Clear() {
  if (has_text()) {
    text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  coding_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CodeableConcept::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fhirbuffs.CodeableConcept)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .fhirbuffs.Coding coding = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_coding:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_coding()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_coding;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // required string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.CodeableConcept.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fhirbuffs.CodeableConcept)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fhirbuffs.CodeableConcept)
  return false;
#undef DO_
}

void CodeableConcept::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fhirbuffs.CodeableConcept)
  // repeated .fhirbuffs.Coding coding = 1;
  for (unsigned int i = 0, n = this->coding_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->coding(i), output);
  }

  // required string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.CodeableConcept.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fhirbuffs.CodeableConcept)
}

::google::protobuf::uint8* CodeableConcept::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fhirbuffs.CodeableConcept)
  // repeated .fhirbuffs.Coding coding = 1;
  for (unsigned int i = 0, n = this->coding_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->coding(i), target);
  }

  // required string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.CodeableConcept.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fhirbuffs.CodeableConcept)
  return target;
}

int CodeableConcept::ByteSize() const {
  int total_size = 0;

  // required string text = 2;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }
  // repeated .fhirbuffs.Coding coding = 1;
  total_size += 1 * this->coding_size();
  for (int i = 0; i < this->coding_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->coding(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CodeableConcept::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CodeableConcept* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CodeableConcept>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CodeableConcept::MergeFrom(const CodeableConcept& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  coding_.MergeFrom(from.coding_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CodeableConcept::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodeableConcept::CopyFrom(const CodeableConcept& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodeableConcept::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->coding())) return false;
  return true;
}

void CodeableConcept::Swap(CodeableConcept* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CodeableConcept::InternalSwap(CodeableConcept* other) {
  coding_.UnsafeArenaSwap(&other->coding_);
  text_.Swap(&other->text_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CodeableConcept::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CodeableConcept_descriptor_;
  metadata.reflection = CodeableConcept_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CodeableConcept

// repeated .fhirbuffs.Coding coding = 1;
int CodeableConcept::coding_size() const {
  return coding_.size();
}
void CodeableConcept::clear_coding() {
  coding_.Clear();
}
const ::fhirbuffs::Coding& CodeableConcept::coding(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.CodeableConcept.coding)
  return coding_.Get(index);
}
::fhirbuffs::Coding* CodeableConcept::mutable_coding(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.CodeableConcept.coding)
  return coding_.Mutable(index);
}
::fhirbuffs::Coding* CodeableConcept::add_coding() {
  // @@protoc_insertion_point(field_add:fhirbuffs.CodeableConcept.coding)
  return coding_.Add();
}
::google::protobuf::RepeatedPtrField< ::fhirbuffs::Coding >*
CodeableConcept::mutable_coding() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.CodeableConcept.coding)
  return &coding_;
}
const ::google::protobuf::RepeatedPtrField< ::fhirbuffs::Coding >&
CodeableConcept::coding() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.CodeableConcept.coding)
  return coding_;
}

// required string text = 2;
bool CodeableConcept::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CodeableConcept::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
void CodeableConcept::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
void CodeableConcept::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
 const ::std::string& CodeableConcept::text() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.CodeableConcept.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CodeableConcept::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.CodeableConcept.text)
}
 void CodeableConcept::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.CodeableConcept.text)
}
 void CodeableConcept::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.CodeableConcept.text)
}
 ::std::string* CodeableConcept::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.CodeableConcept.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CodeableConcept::release_text() {
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CodeableConcept::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.CodeableConcept.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Period::kStartFieldNumber;
const int Period::kEndFieldNumber;
#endif  // !_MSC_VER

Period::Period()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fhirbuffs.Period)
}

void Period::InitAsDefaultInstance() {
}

Period::Period(const Period& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fhirbuffs.Period)
}

void Period::SharedCtor() {
  _cached_size_ = 0;
  start_ = GOOGLE_LONGLONG(0);
  end_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Period::~Period() {
  // @@protoc_insertion_point(destructor:fhirbuffs.Period)
  SharedDtor();
}

void Period::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Period::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Period::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Period_descriptor_;
}

const Period& Period::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_primitives_2eproto();
  return *default_instance_;
}

Period* Period::default_instance_ = NULL;

Period* Period::New(::google::protobuf::Arena* arena) const {
  Period* n = new Period;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Period::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Period*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(start_, end_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Period::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fhirbuffs.Period)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 start = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_)));
          set_has_start();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_end;
        break;
      }

      // required int64 end = 2;
      case 2: {
        if (tag == 16) {
         parse_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_)));
          set_has_end();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fhirbuffs.Period)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fhirbuffs.Period)
  return false;
#undef DO_
}

void Period::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fhirbuffs.Period)
  // required int64 start = 1;
  if (has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start(), output);
  }

  // required int64 end = 2;
  if (has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fhirbuffs.Period)
}

::google::protobuf::uint8* Period::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fhirbuffs.Period)
  // required int64 start = 1;
  if (has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start(), target);
  }

  // required int64 end = 2;
  if (has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fhirbuffs.Period)
  return target;
}

int Period::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_start()) {
    // required int64 start = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start());
  }

  if (has_end()) {
    // required int64 end = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->end());
  }

  return total_size;
}
int Period::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 start = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start());

    // required int64 end = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->end());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Period::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Period* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Period>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Period::MergeFrom(const Period& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start()) {
      set_start(from.start());
    }
    if (from.has_end()) {
      set_end(from.end());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Period::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Period::CopyFrom(const Period& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Period::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Period::Swap(Period* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Period::InternalSwap(Period* other) {
  std::swap(start_, other->start_);
  std::swap(end_, other->end_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Period::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Period_descriptor_;
  metadata.reflection = Period_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Period

// required int64 start = 1;
bool Period::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Period::set_has_start() {
  _has_bits_[0] |= 0x00000001u;
}
void Period::clear_has_start() {
  _has_bits_[0] &= ~0x00000001u;
}
void Period::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
  clear_has_start();
}
 ::google::protobuf::int64 Period::start() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Period.start)
  return start_;
}
 void Period::set_start(::google::protobuf::int64 value) {
  set_has_start();
  start_ = value;
  // @@protoc_insertion_point(field_set:fhirbuffs.Period.start)
}

// required int64 end = 2;
bool Period::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Period::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
void Period::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
void Period::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
  clear_has_end();
}
 ::google::protobuf::int64 Period::end() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Period.end)
  return end_;
}
 void Period::set_end(::google::protobuf::int64 value) {
  set_has_end();
  end_ = value;
  // @@protoc_insertion_point(field_set:fhirbuffs.Period.end)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Address_AddressUses_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Address_AddressUses_descriptor_;
}
bool Address_AddressUses_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Address_AddressUses Address::home;
const Address_AddressUses Address::work;
const Address_AddressUses Address::temp;
const Address_AddressUses Address::old;
const Address_AddressUses Address::AddressUses_MIN;
const Address_AddressUses Address::AddressUses_MAX;
const int Address::AddressUses_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* Address_AddressTypes_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Address_AddressTypes_descriptor_;
}
bool Address_AddressTypes_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Address_AddressTypes Address::postal;
const Address_AddressTypes Address::physical;
const Address_AddressTypes Address::both;
const Address_AddressTypes Address::AddressTypes_MIN;
const Address_AddressTypes Address::AddressTypes_MAX;
const int Address::AddressTypes_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Address::kUseFieldNumber;
const int Address::kTypeFieldNumber;
const int Address::kTextFieldNumber;
const int Address::kLineFieldNumber;
const int Address::kCityFieldNumber;
const int Address::kDistrictFieldNumber;
const int Address::kStateFieldNumber;
const int Address::kPostalCodeFieldNumber;
const int Address::kCountryFieldNumber;
const int Address::kPeriodFieldNumber;
#endif  // !_MSC_VER

Address::Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fhirbuffs.Address)
}

void Address::InitAsDefaultInstance() {
  period_ = const_cast< ::fhirbuffs::Period*>(&::fhirbuffs::Period::default_instance());
}

Address::Address(const Address& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fhirbuffs.Address)
}

void Address::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  use_ = 0;
  type_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  district_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postalcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  period_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Address::~Address() {
  // @@protoc_insertion_point(destructor:fhirbuffs.Address)
  SharedDtor();
}

void Address::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  district_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postalcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete period_;
  }
}

void Address::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Address::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Address_descriptor_;
}

const Address& Address::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_primitives_2eproto();
  return *default_instance_;
}

Address* Address::default_instance_ = NULL;

Address* Address::New(::google::protobuf::Arena* arena) const {
  Address* n = new Address;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Address::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Address*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 247u) {
    ZR_(use_, type_);
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_city()) {
      city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_district()) {
      district_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_state()) {
      state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_postalcode()) {
      postalcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_country()) {
      country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_period()) {
      if (period_ != NULL) period_->::fhirbuffs::Period::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  line_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fhirbuffs.Address)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .fhirbuffs.Address.AddressUses use = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fhirbuffs::Address_AddressUses_IsValid(value)) {
            set_use(static_cast< ::fhirbuffs::Address_AddressUses >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .fhirbuffs.Address.AddressTypes type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fhirbuffs::Address_AddressTypes_IsValid(value)) {
            set_type(static_cast< ::fhirbuffs::Address_AddressTypes >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_text;
        break;
      }

      // required string text = 3;
      case 3: {
        if (tag == 26) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Address.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_line;
        break;
      }

      // repeated string line = 4;
      case 4: {
        if (tag == 34) {
         parse_line:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_line()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->line(this->line_size() - 1).data(),
            this->line(this->line_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Address.line");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_line;
        if (input->ExpectTag(42)) goto parse_city;
        break;
      }

      // required string city = 5;
      case 5: {
        if (tag == 42) {
         parse_city:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Address.city");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_district;
        break;
      }

      // required string district = 6;
      case 6: {
        if (tag == 50) {
         parse_district:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_district()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->district().data(), this->district().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Address.district");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_state;
        break;
      }

      // required string state = 7;
      case 7: {
        if (tag == 58) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), this->state().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Address.state");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_postalCode;
        break;
      }

      // required string postalCode = 8;
      case 8: {
        if (tag == 66) {
         parse_postalCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_postalcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->postalcode().data(), this->postalcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Address.postalCode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_country;
        break;
      }

      // required string country = 9;
      case 9: {
        if (tag == 74) {
         parse_country:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Address.country");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_period;
        break;
      }

      // required .fhirbuffs.Period period = 10;
      case 10: {
        if (tag == 82) {
         parse_period:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fhirbuffs.Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fhirbuffs.Address)
  return false;
#undef DO_
}

void Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fhirbuffs.Address)
  // required .fhirbuffs.Address.AddressUses use = 1;
  if (has_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->use(), output);
  }

  // required .fhirbuffs.Address.AddressTypes type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // required string text = 3;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  // repeated string line = 4;
  for (int i = 0; i < this->line_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->line(i).data(), this->line(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.line");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->line(i), output);
  }

  // required string city = 5;
  if (has_city()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->city(), output);
  }

  // required string district = 6;
  if (has_district()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->district().data(), this->district().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.district");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->district(), output);
  }

  // required string state = 7;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->state(), output);
  }

  // required string postalCode = 8;
  if (has_postalcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->postalcode().data(), this->postalcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.postalCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->postalcode(), output);
  }

  // required string country = 9;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->country(), output);
  }

  // required .fhirbuffs.Period period = 10;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->period_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fhirbuffs.Address)
}

::google::protobuf::uint8* Address::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fhirbuffs.Address)
  // required .fhirbuffs.Address.AddressUses use = 1;
  if (has_use()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->use(), target);
  }

  // required .fhirbuffs.Address.AddressTypes type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // required string text = 3;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  // repeated string line = 4;
  for (int i = 0; i < this->line_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->line(i).data(), this->line(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.line");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->line(i), target);
  }

  // required string city = 5;
  if (has_city()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->city(), target);
  }

  // required string district = 6;
  if (has_district()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->district().data(), this->district().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.district");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->district(), target);
  }

  // required string state = 7;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->state(), target);
  }

  // required string postalCode = 8;
  if (has_postalcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->postalcode().data(), this->postalcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.postalCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->postalcode(), target);
  }

  // required string country = 9;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Address.country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->country(), target);
  }

  // required .fhirbuffs.Period period = 10;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, *this->period_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fhirbuffs.Address)
  return target;
}

int Address::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_use()) {
    // required .fhirbuffs.Address.AddressUses use = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->use());
  }

  if (has_type()) {
    // required .fhirbuffs.Address.AddressTypes type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_text()) {
    // required string text = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_city()) {
    // required string city = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());
  }

  if (has_district()) {
    // required string district = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->district());
  }

  if (has_state()) {
    // required string state = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->state());
  }

  if (has_postalcode()) {
    // required string postalCode = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->postalcode());
  }

  if (has_country()) {
    // required string country = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country());
  }

  if (has_period()) {
    // required .fhirbuffs.Period period = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->period_);
  }

  return total_size;
}
int Address::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x000003f7) ^ 0x000003f7) == 0) {  // All required fields are present.
    // required .fhirbuffs.Address.AddressUses use = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->use());

    // required .fhirbuffs.Address.AddressTypes type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required string text = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required string city = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());

    // required string district = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->district());

    // required string state = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->state());

    // required string postalCode = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->postalcode());

    // required string country = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country());

    // required .fhirbuffs.Period period = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->period_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string line = 4;
  total_size += 1 * this->line_size();
  for (int i = 0; i < this->line_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->line(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Address::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Address* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Address>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Address::MergeFrom(const Address& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  line_.MergeFrom(from.line_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_use()) {
      set_use(from.use());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (from.has_city()) {
      set_has_city();
      city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
    }
    if (from.has_district()) {
      set_has_district();
      district_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.district_);
    }
    if (from.has_state()) {
      set_has_state();
      state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
    }
    if (from.has_postalcode()) {
      set_has_postalcode();
      postalcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.postalcode_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_country()) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (from.has_period()) {
      mutable_period()->::fhirbuffs::Period::MergeFrom(from.period());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Address::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Address::CopyFrom(const Address& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Address::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003f7) != 0x000003f7) return false;

  if (has_period()) {
    if (!this->period_->IsInitialized()) return false;
  }
  return true;
}

void Address::Swap(Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Address::InternalSwap(Address* other) {
  std::swap(use_, other->use_);
  std::swap(type_, other->type_);
  text_.Swap(&other->text_);
  line_.UnsafeArenaSwap(&other->line_);
  city_.Swap(&other->city_);
  district_.Swap(&other->district_);
  state_.Swap(&other->state_);
  postalcode_.Swap(&other->postalcode_);
  country_.Swap(&other->country_);
  std::swap(period_, other->period_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Address::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Address_descriptor_;
  metadata.reflection = Address_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Address

// required .fhirbuffs.Address.AddressUses use = 1;
bool Address::has_use() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Address::set_has_use() {
  _has_bits_[0] |= 0x00000001u;
}
void Address::clear_has_use() {
  _has_bits_[0] &= ~0x00000001u;
}
void Address::clear_use() {
  use_ = 0;
  clear_has_use();
}
 ::fhirbuffs::Address_AddressUses Address::use() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Address.use)
  return static_cast< ::fhirbuffs::Address_AddressUses >(use_);
}
 void Address::set_use(::fhirbuffs::Address_AddressUses value) {
  assert(::fhirbuffs::Address_AddressUses_IsValid(value));
  set_has_use();
  use_ = value;
  // @@protoc_insertion_point(field_set:fhirbuffs.Address.use)
}

// required .fhirbuffs.Address.AddressTypes type = 2;
bool Address::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Address::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void Address::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void Address::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::fhirbuffs::Address_AddressTypes Address::type() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Address.type)
  return static_cast< ::fhirbuffs::Address_AddressTypes >(type_);
}
 void Address::set_type(::fhirbuffs::Address_AddressTypes value) {
  assert(::fhirbuffs::Address_AddressTypes_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:fhirbuffs.Address.type)
}

// required string text = 3;
bool Address::has_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Address::set_has_text() {
  _has_bits_[0] |= 0x00000004u;
}
void Address::clear_has_text() {
  _has_bits_[0] &= ~0x00000004u;
}
void Address::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
 const ::std::string& Address::text() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Address.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Address::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Address.text)
}
 void Address::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Address.text)
}
 void Address::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Address.text)
}
 ::std::string* Address::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Address.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Address::release_text() {
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Address::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Address.text)
}

// repeated string line = 4;
int Address::line_size() const {
  return line_.size();
}
void Address::clear_line() {
  line_.Clear();
}
 const ::std::string& Address::line(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Address.line)
  return line_.Get(index);
}
 ::std::string* Address::mutable_line(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Address.line)
  return line_.Mutable(index);
}
 void Address::set_line(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:fhirbuffs.Address.line)
  line_.Mutable(index)->assign(value);
}
 void Address::set_line(int index, const char* value) {
  line_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Address.line)
}
 void Address::set_line(int index, const char* value, size_t size) {
  line_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Address.line)
}
 ::std::string* Address::add_line() {
  return line_.Add();
}
 void Address::add_line(const ::std::string& value) {
  line_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:fhirbuffs.Address.line)
}
 void Address::add_line(const char* value) {
  line_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fhirbuffs.Address.line)
}
 void Address::add_line(const char* value, size_t size) {
  line_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fhirbuffs.Address.line)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Address::line() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.Address.line)
  return line_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Address::mutable_line() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.Address.line)
  return &line_;
}

// required string city = 5;
bool Address::has_city() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Address::set_has_city() {
  _has_bits_[0] |= 0x00000010u;
}
void Address::clear_has_city() {
  _has_bits_[0] &= ~0x00000010u;
}
void Address::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
 const ::std::string& Address::city() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Address.city)
  return city_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Address::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Address.city)
}
 void Address::set_city(const char* value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Address.city)
}
 void Address::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Address.city)
}
 ::std::string* Address::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Address.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Address::release_city() {
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Address::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Address.city)
}

// required string district = 6;
bool Address::has_district() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Address::set_has_district() {
  _has_bits_[0] |= 0x00000020u;
}
void Address::clear_has_district() {
  _has_bits_[0] &= ~0x00000020u;
}
void Address::clear_district() {
  district_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_district();
}
 const ::std::string& Address::district() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Address.district)
  return district_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Address::set_district(const ::std::string& value) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Address.district)
}
 void Address::set_district(const char* value) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Address.district)
}
 void Address::set_district(const char* value, size_t size) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Address.district)
}
 ::std::string* Address::mutable_district() {
  set_has_district();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Address.district)
  return district_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Address::release_district() {
  clear_has_district();
  return district_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Address::set_allocated_district(::std::string* district) {
  if (district != NULL) {
    set_has_district();
  } else {
    clear_has_district();
  }
  district_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), district);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Address.district)
}

// required string state = 7;
bool Address::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Address::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
void Address::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
void Address::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_state();
}
 const ::std::string& Address::state() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Address.state)
  return state_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Address::set_state(const ::std::string& value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Address.state)
}
 void Address::set_state(const char* value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Address.state)
}
 void Address::set_state(const char* value, size_t size) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Address.state)
}
 ::std::string* Address::mutable_state() {
  set_has_state();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Address.state)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Address::release_state() {
  clear_has_state();
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Address::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    set_has_state();
  } else {
    clear_has_state();
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Address.state)
}

// required string postalCode = 8;
bool Address::has_postalcode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Address::set_has_postalcode() {
  _has_bits_[0] |= 0x00000080u;
}
void Address::clear_has_postalcode() {
  _has_bits_[0] &= ~0x00000080u;
}
void Address::clear_postalcode() {
  postalcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_postalcode();
}
 const ::std::string& Address::postalcode() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Address.postalCode)
  return postalcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Address::set_postalcode(const ::std::string& value) {
  set_has_postalcode();
  postalcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Address.postalCode)
}
 void Address::set_postalcode(const char* value) {
  set_has_postalcode();
  postalcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Address.postalCode)
}
 void Address::set_postalcode(const char* value, size_t size) {
  set_has_postalcode();
  postalcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Address.postalCode)
}
 ::std::string* Address::mutable_postalcode() {
  set_has_postalcode();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Address.postalCode)
  return postalcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Address::release_postalcode() {
  clear_has_postalcode();
  return postalcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Address::set_allocated_postalcode(::std::string* postalcode) {
  if (postalcode != NULL) {
    set_has_postalcode();
  } else {
    clear_has_postalcode();
  }
  postalcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), postalcode);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Address.postalCode)
}

// required string country = 9;
bool Address::has_country() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Address::set_has_country() {
  _has_bits_[0] |= 0x00000100u;
}
void Address::clear_has_country() {
  _has_bits_[0] &= ~0x00000100u;
}
void Address::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
 const ::std::string& Address::country() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Address.country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Address::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Address.country)
}
 void Address::set_country(const char* value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Address.country)
}
 void Address::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Address.country)
}
 ::std::string* Address::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Address.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Address::release_country() {
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Address::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Address.country)
}

// required .fhirbuffs.Period period = 10;
bool Address::has_period() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Address::set_has_period() {
  _has_bits_[0] |= 0x00000200u;
}
void Address::clear_has_period() {
  _has_bits_[0] &= ~0x00000200u;
}
void Address::clear_period() {
  if (period_ != NULL) period_->::fhirbuffs::Period::Clear();
  clear_has_period();
}
const ::fhirbuffs::Period& Address::period() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Address.period)
  return period_ != NULL ? *period_ : *default_instance_->period_;
}
::fhirbuffs::Period* Address::mutable_period() {
  set_has_period();
  if (period_ == NULL) {
    period_ = new ::fhirbuffs::Period;
  }
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Address.period)
  return period_;
}
::fhirbuffs::Period* Address::release_period() {
  clear_has_period();
  ::fhirbuffs::Period* temp = period_;
  period_ = NULL;
  return temp;
}
void Address::set_allocated_period(::fhirbuffs::Period* period) {
  delete period_;
  period_ = period;
  if (period) {
    set_has_period();
  } else {
    clear_has_period();
  }
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Address.period)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* HumanName_HumanNameUses_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HumanName_HumanNameUses_descriptor_;
}
bool HumanName_HumanNameUses_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const HumanName_HumanNameUses HumanName::usual;
const HumanName_HumanNameUses HumanName::official;
const HumanName_HumanNameUses HumanName::temp;
const HumanName_HumanNameUses HumanName::nickname;
const HumanName_HumanNameUses HumanName::anonymous;
const HumanName_HumanNameUses HumanName::old;
const HumanName_HumanNameUses HumanName::maiden;
const HumanName_HumanNameUses HumanName::HumanNameUses_MIN;
const HumanName_HumanNameUses HumanName::HumanNameUses_MAX;
const int HumanName::HumanNameUses_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int HumanName::kUseFieldNumber;
const int HumanName::kTextFieldNumber;
const int HumanName::kFamilyFieldNumber;
const int HumanName::kGivenFieldNumber;
const int HumanName::kPrefixFieldNumber;
const int HumanName::kSuffixFieldNumber;
const int HumanName::kPeriodFieldNumber;
#endif  // !_MSC_VER

HumanName::HumanName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fhirbuffs.HumanName)
}

void HumanName::InitAsDefaultInstance() {
  period_ = const_cast< ::fhirbuffs::Period*>(&::fhirbuffs::Period::default_instance());
}

HumanName::HumanName(const HumanName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fhirbuffs.HumanName)
}

void HumanName::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  use_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  period_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HumanName::~HumanName() {
  // @@protoc_insertion_point(destructor:fhirbuffs.HumanName)
  SharedDtor();
}

void HumanName::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete period_;
  }
}

void HumanName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HumanName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HumanName_descriptor_;
}

const HumanName& HumanName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_primitives_2eproto();
  return *default_instance_;
}

HumanName* HumanName::default_instance_ = NULL;

HumanName* HumanName::New(::google::protobuf::Arena* arena) const {
  HumanName* n = new HumanName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HumanName::Clear() {
  if (_has_bits_[0 / 32] & 67u) {
    use_ = 0;
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_period()) {
      if (period_ != NULL) period_->::fhirbuffs::Period::Clear();
    }
  }
  family_.Clear();
  given_.Clear();
  prefix_.Clear();
  suffix_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HumanName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fhirbuffs.HumanName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .fhirbuffs.HumanName.HumanNameUses use = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fhirbuffs::HumanName_HumanNameUses_IsValid(value)) {
            set_use(static_cast< ::fhirbuffs::HumanName_HumanNameUses >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // required string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.HumanName.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_family;
        break;
      }

      // repeated string family = 3;
      case 3: {
        if (tag == 26) {
         parse_family:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_family()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->family(this->family_size() - 1).data(),
            this->family(this->family_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.HumanName.family");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_family;
        if (input->ExpectTag(34)) goto parse_given;
        break;
      }

      // repeated string given = 4;
      case 4: {
        if (tag == 34) {
         parse_given:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_given()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->given(this->given_size() - 1).data(),
            this->given(this->given_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.HumanName.given");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_given;
        if (input->ExpectTag(42)) goto parse_prefix;
        break;
      }

      // repeated string prefix = 5;
      case 5: {
        if (tag == 42) {
         parse_prefix:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_prefix()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->prefix(this->prefix_size() - 1).data(),
            this->prefix(this->prefix_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.HumanName.prefix");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_prefix;
        if (input->ExpectTag(50)) goto parse_suffix;
        break;
      }

      // repeated string suffix = 6;
      case 6: {
        if (tag == 50) {
         parse_suffix:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_suffix()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->suffix(this->suffix_size() - 1).data(),
            this->suffix(this->suffix_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.HumanName.suffix");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_suffix;
        if (input->ExpectTag(58)) goto parse_period;
        break;
      }

      // required .fhirbuffs.Period period = 7;
      case 7: {
        if (tag == 58) {
         parse_period:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fhirbuffs.HumanName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fhirbuffs.HumanName)
  return false;
#undef DO_
}

void HumanName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fhirbuffs.HumanName)
  // required .fhirbuffs.HumanName.HumanNameUses use = 1;
  if (has_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->use(), output);
  }

  // required string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.HumanName.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // repeated string family = 3;
  for (int i = 0; i < this->family_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->family(i).data(), this->family(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.HumanName.family");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->family(i), output);
  }

  // repeated string given = 4;
  for (int i = 0; i < this->given_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->given(i).data(), this->given(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.HumanName.given");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->given(i), output);
  }

  // repeated string prefix = 5;
  for (int i = 0; i < this->prefix_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prefix(i).data(), this->prefix(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.HumanName.prefix");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->prefix(i), output);
  }

  // repeated string suffix = 6;
  for (int i = 0; i < this->suffix_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suffix(i).data(), this->suffix(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.HumanName.suffix");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->suffix(i), output);
  }

  // required .fhirbuffs.Period period = 7;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->period_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fhirbuffs.HumanName)
}

::google::protobuf::uint8* HumanName::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fhirbuffs.HumanName)
  // required .fhirbuffs.HumanName.HumanNameUses use = 1;
  if (has_use()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->use(), target);
  }

  // required string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.HumanName.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // repeated string family = 3;
  for (int i = 0; i < this->family_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->family(i).data(), this->family(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.HumanName.family");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->family(i), target);
  }

  // repeated string given = 4;
  for (int i = 0; i < this->given_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->given(i).data(), this->given(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.HumanName.given");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->given(i), target);
  }

  // repeated string prefix = 5;
  for (int i = 0; i < this->prefix_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prefix(i).data(), this->prefix(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.HumanName.prefix");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->prefix(i), target);
  }

  // repeated string suffix = 6;
  for (int i = 0; i < this->suffix_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suffix(i).data(), this->suffix(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.HumanName.suffix");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->suffix(i), target);
  }

  // required .fhirbuffs.Period period = 7;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->period_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fhirbuffs.HumanName)
  return target;
}

int HumanName::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_use()) {
    // required .fhirbuffs.HumanName.HumanNameUses use = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->use());
  }

  if (has_text()) {
    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_period()) {
    // required .fhirbuffs.Period period = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->period_);
  }

  return total_size;
}
int HumanName::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000043) ^ 0x00000043) == 0) {  // All required fields are present.
    // required .fhirbuffs.HumanName.HumanNameUses use = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->use());

    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required .fhirbuffs.Period period = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->period_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string family = 3;
  total_size += 1 * this->family_size();
  for (int i = 0; i < this->family_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->family(i));
  }

  // repeated string given = 4;
  total_size += 1 * this->given_size();
  for (int i = 0; i < this->given_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->given(i));
  }

  // repeated string prefix = 5;
  total_size += 1 * this->prefix_size();
  for (int i = 0; i < this->prefix_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->prefix(i));
  }

  // repeated string suffix = 6;
  total_size += 1 * this->suffix_size();
  for (int i = 0; i < this->suffix_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->suffix(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HumanName::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HumanName* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HumanName>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HumanName::MergeFrom(const HumanName& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  family_.MergeFrom(from.family_);
  given_.MergeFrom(from.given_);
  prefix_.MergeFrom(from.prefix_);
  suffix_.MergeFrom(from.suffix_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_use()) {
      set_use(from.use());
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (from.has_period()) {
      mutable_period()->::fhirbuffs::Period::MergeFrom(from.period());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HumanName::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HumanName::CopyFrom(const HumanName& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HumanName::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000043) != 0x00000043) return false;

  if (has_period()) {
    if (!this->period_->IsInitialized()) return false;
  }
  return true;
}

void HumanName::Swap(HumanName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HumanName::InternalSwap(HumanName* other) {
  std::swap(use_, other->use_);
  text_.Swap(&other->text_);
  family_.UnsafeArenaSwap(&other->family_);
  given_.UnsafeArenaSwap(&other->given_);
  prefix_.UnsafeArenaSwap(&other->prefix_);
  suffix_.UnsafeArenaSwap(&other->suffix_);
  std::swap(period_, other->period_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HumanName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HumanName_descriptor_;
  metadata.reflection = HumanName_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HumanName

// required .fhirbuffs.HumanName.HumanNameUses use = 1;
bool HumanName::has_use() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HumanName::set_has_use() {
  _has_bits_[0] |= 0x00000001u;
}
void HumanName::clear_has_use() {
  _has_bits_[0] &= ~0x00000001u;
}
void HumanName::clear_use() {
  use_ = 0;
  clear_has_use();
}
 ::fhirbuffs::HumanName_HumanNameUses HumanName::use() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.HumanName.use)
  return static_cast< ::fhirbuffs::HumanName_HumanNameUses >(use_);
}
 void HumanName::set_use(::fhirbuffs::HumanName_HumanNameUses value) {
  assert(::fhirbuffs::HumanName_HumanNameUses_IsValid(value));
  set_has_use();
  use_ = value;
  // @@protoc_insertion_point(field_set:fhirbuffs.HumanName.use)
}

// required string text = 2;
bool HumanName::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HumanName::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
void HumanName::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
void HumanName::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
 const ::std::string& HumanName::text() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.HumanName.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HumanName::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.HumanName.text)
}
 void HumanName::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.HumanName.text)
}
 void HumanName::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.HumanName.text)
}
 ::std::string* HumanName::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.HumanName.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HumanName::release_text() {
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HumanName::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.HumanName.text)
}

// repeated string family = 3;
int HumanName::family_size() const {
  return family_.size();
}
void HumanName::clear_family() {
  family_.Clear();
}
 const ::std::string& HumanName::family(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.HumanName.family)
  return family_.Get(index);
}
 ::std::string* HumanName::mutable_family(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.HumanName.family)
  return family_.Mutable(index);
}
 void HumanName::set_family(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:fhirbuffs.HumanName.family)
  family_.Mutable(index)->assign(value);
}
 void HumanName::set_family(int index, const char* value) {
  family_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fhirbuffs.HumanName.family)
}
 void HumanName::set_family(int index, const char* value, size_t size) {
  family_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.HumanName.family)
}
 ::std::string* HumanName::add_family() {
  return family_.Add();
}
 void HumanName::add_family(const ::std::string& value) {
  family_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:fhirbuffs.HumanName.family)
}
 void HumanName::add_family(const char* value) {
  family_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fhirbuffs.HumanName.family)
}
 void HumanName::add_family(const char* value, size_t size) {
  family_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fhirbuffs.HumanName.family)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
HumanName::family() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.HumanName.family)
  return family_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
HumanName::mutable_family() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.HumanName.family)
  return &family_;
}

// repeated string given = 4;
int HumanName::given_size() const {
  return given_.size();
}
void HumanName::clear_given() {
  given_.Clear();
}
 const ::std::string& HumanName::given(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.HumanName.given)
  return given_.Get(index);
}
 ::std::string* HumanName::mutable_given(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.HumanName.given)
  return given_.Mutable(index);
}
 void HumanName::set_given(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:fhirbuffs.HumanName.given)
  given_.Mutable(index)->assign(value);
}
 void HumanName::set_given(int index, const char* value) {
  given_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fhirbuffs.HumanName.given)
}
 void HumanName::set_given(int index, const char* value, size_t size) {
  given_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.HumanName.given)
}
 ::std::string* HumanName::add_given() {
  return given_.Add();
}
 void HumanName::add_given(const ::std::string& value) {
  given_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:fhirbuffs.HumanName.given)
}
 void HumanName::add_given(const char* value) {
  given_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fhirbuffs.HumanName.given)
}
 void HumanName::add_given(const char* value, size_t size) {
  given_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fhirbuffs.HumanName.given)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
HumanName::given() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.HumanName.given)
  return given_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
HumanName::mutable_given() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.HumanName.given)
  return &given_;
}

// repeated string prefix = 5;
int HumanName::prefix_size() const {
  return prefix_.size();
}
void HumanName::clear_prefix() {
  prefix_.Clear();
}
 const ::std::string& HumanName::prefix(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.HumanName.prefix)
  return prefix_.Get(index);
}
 ::std::string* HumanName::mutable_prefix(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.HumanName.prefix)
  return prefix_.Mutable(index);
}
 void HumanName::set_prefix(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:fhirbuffs.HumanName.prefix)
  prefix_.Mutable(index)->assign(value);
}
 void HumanName::set_prefix(int index, const char* value) {
  prefix_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fhirbuffs.HumanName.prefix)
}
 void HumanName::set_prefix(int index, const char* value, size_t size) {
  prefix_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.HumanName.prefix)
}
 ::std::string* HumanName::add_prefix() {
  return prefix_.Add();
}
 void HumanName::add_prefix(const ::std::string& value) {
  prefix_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:fhirbuffs.HumanName.prefix)
}
 void HumanName::add_prefix(const char* value) {
  prefix_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fhirbuffs.HumanName.prefix)
}
 void HumanName::add_prefix(const char* value, size_t size) {
  prefix_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fhirbuffs.HumanName.prefix)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
HumanName::prefix() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.HumanName.prefix)
  return prefix_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
HumanName::mutable_prefix() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.HumanName.prefix)
  return &prefix_;
}

// repeated string suffix = 6;
int HumanName::suffix_size() const {
  return suffix_.size();
}
void HumanName::clear_suffix() {
  suffix_.Clear();
}
 const ::std::string& HumanName::suffix(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.HumanName.suffix)
  return suffix_.Get(index);
}
 ::std::string* HumanName::mutable_suffix(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.HumanName.suffix)
  return suffix_.Mutable(index);
}
 void HumanName::set_suffix(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:fhirbuffs.HumanName.suffix)
  suffix_.Mutable(index)->assign(value);
}
 void HumanName::set_suffix(int index, const char* value) {
  suffix_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fhirbuffs.HumanName.suffix)
}
 void HumanName::set_suffix(int index, const char* value, size_t size) {
  suffix_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.HumanName.suffix)
}
 ::std::string* HumanName::add_suffix() {
  return suffix_.Add();
}
 void HumanName::add_suffix(const ::std::string& value) {
  suffix_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:fhirbuffs.HumanName.suffix)
}
 void HumanName::add_suffix(const char* value) {
  suffix_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fhirbuffs.HumanName.suffix)
}
 void HumanName::add_suffix(const char* value, size_t size) {
  suffix_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fhirbuffs.HumanName.suffix)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
HumanName::suffix() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.HumanName.suffix)
  return suffix_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
HumanName::mutable_suffix() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.HumanName.suffix)
  return &suffix_;
}

// required .fhirbuffs.Period period = 7;
bool HumanName::has_period() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void HumanName::set_has_period() {
  _has_bits_[0] |= 0x00000040u;
}
void HumanName::clear_has_period() {
  _has_bits_[0] &= ~0x00000040u;
}
void HumanName::clear_period() {
  if (period_ != NULL) period_->::fhirbuffs::Period::Clear();
  clear_has_period();
}
const ::fhirbuffs::Period& HumanName::period() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.HumanName.period)
  return period_ != NULL ? *period_ : *default_instance_->period_;
}
::fhirbuffs::Period* HumanName::mutable_period() {
  set_has_period();
  if (period_ == NULL) {
    period_ = new ::fhirbuffs::Period;
  }
  // @@protoc_insertion_point(field_mutable:fhirbuffs.HumanName.period)
  return period_;
}
::fhirbuffs::Period* HumanName::release_period() {
  clear_has_period();
  ::fhirbuffs::Period* temp = period_;
  period_ = NULL;
  return temp;
}
void HumanName::set_allocated_period(::fhirbuffs::Period* period) {
  delete period_;
  period_ = period;
  if (period) {
    set_has_period();
  } else {
    clear_has_period();
  }
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.HumanName.period)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* ContactPoint_AuthorReferences_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContactPoint_AuthorReferences_descriptor_;
}
bool ContactPoint_AuthorReferences_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ContactPoint_AuthorReferences ContactPoint::Practitioner;
const ContactPoint_AuthorReferences ContactPoint::Patient;
const ContactPoint_AuthorReferences ContactPoint::RelatedPerson;
const ContactPoint_AuthorReferences ContactPoint::Other;
const ContactPoint_AuthorReferences ContactPoint::AuthorReferences_MIN;
const ContactPoint_AuthorReferences ContactPoint::AuthorReferences_MAX;
const int ContactPoint::AuthorReferences_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ContactPoint::kAuthorReferenceFieldNumber;
const int ContactPoint::kAuthorStringFieldNumber;
const int ContactPoint::kTimeFieldNumber;
const int ContactPoint::kTextFieldNumber;
#endif  // !_MSC_VER

ContactPoint::ContactPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fhirbuffs.ContactPoint)
}

void ContactPoint::InitAsDefaultInstance() {
}

ContactPoint::ContactPoint(const ContactPoint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fhirbuffs.ContactPoint)
}

void ContactPoint::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  authorreference_ = 0;
  authorstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_LONGLONG(0);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContactPoint::~ContactPoint() {
  // @@protoc_insertion_point(destructor:fhirbuffs.ContactPoint)
  SharedDtor();
}

void ContactPoint::SharedDtor() {
  authorstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ContactPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContactPoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContactPoint_descriptor_;
}

const ContactPoint& ContactPoint::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_primitives_2eproto();
  return *default_instance_;
}

ContactPoint* ContactPoint::default_instance_ = NULL;

ContactPoint* ContactPoint::New(::google::protobuf::Arena* arena) const {
  ContactPoint* n = new ContactPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContactPoint::Clear() {
  if (_has_bits_[0 / 32] & 15u) {
    authorreference_ = 0;
    if (has_authorstring()) {
      authorstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    time_ = GOOGLE_LONGLONG(0);
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ContactPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fhirbuffs.ContactPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fhirbuffs.ContactPoint.AuthorReferences authorReference = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fhirbuffs::ContactPoint_AuthorReferences_IsValid(value)) {
            set_authorreference(static_cast< ::fhirbuffs::ContactPoint_AuthorReferences >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_authorString;
        break;
      }

      // required string authorString = 2;
      case 2: {
        if (tag == 18) {
         parse_authorString:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authorstring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authorstring().data(), this->authorstring().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.ContactPoint.authorString");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_time;
        break;
      }

      // optional int64 time = 3;
      case 3: {
        if (tag == 24) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_text;
        break;
      }

      // required string text = 4;
      case 4: {
        if (tag == 34) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.ContactPoint.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fhirbuffs.ContactPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fhirbuffs.ContactPoint)
  return false;
#undef DO_
}

void ContactPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fhirbuffs.ContactPoint)
  // optional .fhirbuffs.ContactPoint.AuthorReferences authorReference = 1;
  if (has_authorreference()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->authorreference(), output);
  }

  // required string authorString = 2;
  if (has_authorstring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authorstring().data(), this->authorstring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.ContactPoint.authorString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->authorstring(), output);
  }

  // optional int64 time = 3;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time(), output);
  }

  // required string text = 4;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.ContactPoint.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fhirbuffs.ContactPoint)
}

::google::protobuf::uint8* ContactPoint::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fhirbuffs.ContactPoint)
  // optional .fhirbuffs.ContactPoint.AuthorReferences authorReference = 1;
  if (has_authorreference()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->authorreference(), target);
  }

  // required string authorString = 2;
  if (has_authorstring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authorstring().data(), this->authorstring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.ContactPoint.authorString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->authorstring(), target);
  }

  // optional int64 time = 3;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->time(), target);
  }

  // required string text = 4;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.ContactPoint.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fhirbuffs.ContactPoint)
  return target;
}

int ContactPoint::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_authorstring()) {
    // required string authorString = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authorstring());
  }

  if (has_text()) {
    // required string text = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  return total_size;
}
int ContactPoint::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000a) ^ 0x0000000a) == 0) {  // All required fields are present.
    // required string authorString = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authorstring());

    // required string text = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 5u) {
    // optional .fhirbuffs.ContactPoint.AuthorReferences authorReference = 1;
    if (has_authorreference()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->authorreference());
    }

    // optional int64 time = 3;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContactPoint::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ContactPoint* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ContactPoint>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContactPoint::MergeFrom(const ContactPoint& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_authorreference()) {
      set_authorreference(from.authorreference());
    }
    if (from.has_authorstring()) {
      set_has_authorstring();
      authorstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorstring_);
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ContactPoint::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactPoint::CopyFrom(const ContactPoint& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactPoint::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000a) != 0x0000000a) return false;

  return true;
}

void ContactPoint::Swap(ContactPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactPoint::InternalSwap(ContactPoint* other) {
  std::swap(authorreference_, other->authorreference_);
  authorstring_.Swap(&other->authorstring_);
  std::swap(time_, other->time_);
  text_.Swap(&other->text_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContactPoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContactPoint_descriptor_;
  metadata.reflection = ContactPoint_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ContactPoint

// optional .fhirbuffs.ContactPoint.AuthorReferences authorReference = 1;
bool ContactPoint::has_authorreference() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ContactPoint::set_has_authorreference() {
  _has_bits_[0] |= 0x00000001u;
}
void ContactPoint::clear_has_authorreference() {
  _has_bits_[0] &= ~0x00000001u;
}
void ContactPoint::clear_authorreference() {
  authorreference_ = 0;
  clear_has_authorreference();
}
 ::fhirbuffs::ContactPoint_AuthorReferences ContactPoint::authorreference() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.ContactPoint.authorReference)
  return static_cast< ::fhirbuffs::ContactPoint_AuthorReferences >(authorreference_);
}
 void ContactPoint::set_authorreference(::fhirbuffs::ContactPoint_AuthorReferences value) {
  assert(::fhirbuffs::ContactPoint_AuthorReferences_IsValid(value));
  set_has_authorreference();
  authorreference_ = value;
  // @@protoc_insertion_point(field_set:fhirbuffs.ContactPoint.authorReference)
}

// required string authorString = 2;
bool ContactPoint::has_authorstring() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ContactPoint::set_has_authorstring() {
  _has_bits_[0] |= 0x00000002u;
}
void ContactPoint::clear_has_authorstring() {
  _has_bits_[0] &= ~0x00000002u;
}
void ContactPoint::clear_authorstring() {
  authorstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authorstring();
}
 const ::std::string& ContactPoint::authorstring() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.ContactPoint.authorString)
  return authorstring_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContactPoint::set_authorstring(const ::std::string& value) {
  set_has_authorstring();
  authorstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.ContactPoint.authorString)
}
 void ContactPoint::set_authorstring(const char* value) {
  set_has_authorstring();
  authorstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.ContactPoint.authorString)
}
 void ContactPoint::set_authorstring(const char* value, size_t size) {
  set_has_authorstring();
  authorstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.ContactPoint.authorString)
}
 ::std::string* ContactPoint::mutable_authorstring() {
  set_has_authorstring();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.ContactPoint.authorString)
  return authorstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ContactPoint::release_authorstring() {
  clear_has_authorstring();
  return authorstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContactPoint::set_allocated_authorstring(::std::string* authorstring) {
  if (authorstring != NULL) {
    set_has_authorstring();
  } else {
    clear_has_authorstring();
  }
  authorstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authorstring);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.ContactPoint.authorString)
}

// optional int64 time = 3;
bool ContactPoint::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ContactPoint::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
void ContactPoint::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void ContactPoint::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
 ::google::protobuf::int64 ContactPoint::time() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.ContactPoint.time)
  return time_;
}
 void ContactPoint::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:fhirbuffs.ContactPoint.time)
}

// required string text = 4;
bool ContactPoint::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ContactPoint::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
void ContactPoint::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
void ContactPoint::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
 const ::std::string& ContactPoint::text() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.ContactPoint.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContactPoint::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.ContactPoint.text)
}
 void ContactPoint::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.ContactPoint.text)
}
 void ContactPoint::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.ContactPoint.text)
}
 ::std::string* ContactPoint::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.ContactPoint.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ContactPoint::release_text() {
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContactPoint::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.ContactPoint.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Contact::kPurposeFieldNumber;
const int Contact::kNameFieldNumber;
const int Contact::kTelecomFieldNumber;
const int Contact::kAddressFieldNumber;
#endif  // !_MSC_VER

Contact::Contact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fhirbuffs.Contact)
}

void Contact::InitAsDefaultInstance() {
  purpose_ = const_cast< ::fhirbuffs::CodeableConcept*>(&::fhirbuffs::CodeableConcept::default_instance());
  name_ = const_cast< ::fhirbuffs::HumanName*>(&::fhirbuffs::HumanName::default_instance());
  address_ = const_cast< ::fhirbuffs::Address*>(&::fhirbuffs::Address::default_instance());
}

Contact::Contact(const Contact& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fhirbuffs.Contact)
}

void Contact::SharedCtor() {
  _cached_size_ = 0;
  purpose_ = NULL;
  name_ = NULL;
  address_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Contact::~Contact() {
  // @@protoc_insertion_point(destructor:fhirbuffs.Contact)
  SharedDtor();
}

void Contact::SharedDtor() {
  if (this != default_instance_) {
    delete purpose_;
    delete name_;
    delete address_;
  }
}

void Contact::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Contact::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Contact_descriptor_;
}

const Contact& Contact::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_primitives_2eproto();
  return *default_instance_;
}

Contact* Contact::default_instance_ = NULL;

Contact* Contact::New(::google::protobuf::Arena* arena) const {
  Contact* n = new Contact;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Contact::Clear() {
  if (_has_bits_[0 / 32] & 11u) {
    if (has_purpose()) {
      if (purpose_ != NULL) purpose_->::fhirbuffs::CodeableConcept::Clear();
    }
    if (has_name()) {
      if (name_ != NULL) name_->::fhirbuffs::HumanName::Clear();
    }
    if (has_address()) {
      if (address_ != NULL) address_->::fhirbuffs::Address::Clear();
    }
  }
  telecom_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Contact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fhirbuffs.Contact)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .fhirbuffs.CodeableConcept purpose = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_purpose()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required .fhirbuffs.HumanName name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_telecom;
        break;
      }

      // repeated .fhirbuffs.ContactPoint telecom = 3;
      case 3: {
        if (tag == 26) {
         parse_telecom:
          DO_(input->IncrementRecursionDepth());
         parse_loop_telecom:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_telecom()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_telecom;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_address;
        break;
      }

      // required .fhirbuffs.Address address = 4;
      case 4: {
        if (tag == 34) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fhirbuffs.Contact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fhirbuffs.Contact)
  return false;
#undef DO_
}

void Contact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fhirbuffs.Contact)
  // required .fhirbuffs.CodeableConcept purpose = 1;
  if (has_purpose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->purpose_, output);
  }

  // required .fhirbuffs.HumanName name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->name_, output);
  }

  // repeated .fhirbuffs.ContactPoint telecom = 3;
  for (unsigned int i = 0, n = this->telecom_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->telecom(i), output);
  }

  // required .fhirbuffs.Address address = 4;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->address_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fhirbuffs.Contact)
}

::google::protobuf::uint8* Contact::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fhirbuffs.Contact)
  // required .fhirbuffs.CodeableConcept purpose = 1;
  if (has_purpose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->purpose_, target);
  }

  // required .fhirbuffs.HumanName name = 2;
  if (has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->name_, target);
  }

  // repeated .fhirbuffs.ContactPoint telecom = 3;
  for (unsigned int i = 0, n = this->telecom_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->telecom(i), target);
  }

  // required .fhirbuffs.Address address = 4;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->address_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fhirbuffs.Contact)
  return target;
}

int Contact::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_purpose()) {
    // required .fhirbuffs.CodeableConcept purpose = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->purpose_);
  }

  if (has_name()) {
    // required .fhirbuffs.HumanName name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  if (has_address()) {
    // required .fhirbuffs.Address address = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  return total_size;
}
int Contact::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required .fhirbuffs.CodeableConcept purpose = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->purpose_);

    // required .fhirbuffs.HumanName name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);

    // required .fhirbuffs.Address address = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .fhirbuffs.ContactPoint telecom = 3;
  total_size += 1 * this->telecom_size();
  for (int i = 0; i < this->telecom_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->telecom(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Contact::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Contact* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Contact>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Contact::MergeFrom(const Contact& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  telecom_.MergeFrom(from.telecom_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_purpose()) {
      mutable_purpose()->::fhirbuffs::CodeableConcept::MergeFrom(from.purpose());
    }
    if (from.has_name()) {
      mutable_name()->::fhirbuffs::HumanName::MergeFrom(from.name());
    }
    if (from.has_address()) {
      mutable_address()->::fhirbuffs::Address::MergeFrom(from.address());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Contact::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contact::CopyFrom(const Contact& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contact::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;

  if (has_purpose()) {
    if (!this->purpose_->IsInitialized()) return false;
  }
  if (has_name()) {
    if (!this->name_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->telecom())) return false;
  if (has_address()) {
    if (!this->address_->IsInitialized()) return false;
  }
  return true;
}

void Contact::Swap(Contact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Contact::InternalSwap(Contact* other) {
  std::swap(purpose_, other->purpose_);
  std::swap(name_, other->name_);
  telecom_.UnsafeArenaSwap(&other->telecom_);
  std::swap(address_, other->address_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Contact::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Contact_descriptor_;
  metadata.reflection = Contact_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Contact

// required .fhirbuffs.CodeableConcept purpose = 1;
bool Contact::has_purpose() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Contact::set_has_purpose() {
  _has_bits_[0] |= 0x00000001u;
}
void Contact::clear_has_purpose() {
  _has_bits_[0] &= ~0x00000001u;
}
void Contact::clear_purpose() {
  if (purpose_ != NULL) purpose_->::fhirbuffs::CodeableConcept::Clear();
  clear_has_purpose();
}
const ::fhirbuffs::CodeableConcept& Contact::purpose() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Contact.purpose)
  return purpose_ != NULL ? *purpose_ : *default_instance_->purpose_;
}
::fhirbuffs::CodeableConcept* Contact::mutable_purpose() {
  set_has_purpose();
  if (purpose_ == NULL) {
    purpose_ = new ::fhirbuffs::CodeableConcept;
  }
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Contact.purpose)
  return purpose_;
}
::fhirbuffs::CodeableConcept* Contact::release_purpose() {
  clear_has_purpose();
  ::fhirbuffs::CodeableConcept* temp = purpose_;
  purpose_ = NULL;
  return temp;
}
void Contact::set_allocated_purpose(::fhirbuffs::CodeableConcept* purpose) {
  delete purpose_;
  purpose_ = purpose;
  if (purpose) {
    set_has_purpose();
  } else {
    clear_has_purpose();
  }
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Contact.purpose)
}

// required .fhirbuffs.HumanName name = 2;
bool Contact::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Contact::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void Contact::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void Contact::clear_name() {
  if (name_ != NULL) name_->::fhirbuffs::HumanName::Clear();
  clear_has_name();
}
const ::fhirbuffs::HumanName& Contact::name() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Contact.name)
  return name_ != NULL ? *name_ : *default_instance_->name_;
}
::fhirbuffs::HumanName* Contact::mutable_name() {
  set_has_name();
  if (name_ == NULL) {
    name_ = new ::fhirbuffs::HumanName;
  }
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Contact.name)
  return name_;
}
::fhirbuffs::HumanName* Contact::release_name() {
  clear_has_name();
  ::fhirbuffs::HumanName* temp = name_;
  name_ = NULL;
  return temp;
}
void Contact::set_allocated_name(::fhirbuffs::HumanName* name) {
  delete name_;
  name_ = name;
  if (name) {
    set_has_name();
  } else {
    clear_has_name();
  }
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Contact.name)
}

// repeated .fhirbuffs.ContactPoint telecom = 3;
int Contact::telecom_size() const {
  return telecom_.size();
}
void Contact::clear_telecom() {
  telecom_.Clear();
}
const ::fhirbuffs::ContactPoint& Contact::telecom(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Contact.telecom)
  return telecom_.Get(index);
}
::fhirbuffs::ContactPoint* Contact::mutable_telecom(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Contact.telecom)
  return telecom_.Mutable(index);
}
::fhirbuffs::ContactPoint* Contact::add_telecom() {
  // @@protoc_insertion_point(field_add:fhirbuffs.Contact.telecom)
  return telecom_.Add();
}
::google::protobuf::RepeatedPtrField< ::fhirbuffs::ContactPoint >*
Contact::mutable_telecom() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.Contact.telecom)
  return &telecom_;
}
const ::google::protobuf::RepeatedPtrField< ::fhirbuffs::ContactPoint >&
Contact::telecom() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.Contact.telecom)
  return telecom_;
}

// required .fhirbuffs.Address address = 4;
bool Contact::has_address() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Contact::set_has_address() {
  _has_bits_[0] |= 0x00000008u;
}
void Contact::clear_has_address() {
  _has_bits_[0] &= ~0x00000008u;
}
void Contact::clear_address() {
  if (address_ != NULL) address_->::fhirbuffs::Address::Clear();
  clear_has_address();
}
const ::fhirbuffs::Address& Contact::address() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Contact.address)
  return address_ != NULL ? *address_ : *default_instance_->address_;
}
::fhirbuffs::Address* Contact::mutable_address() {
  set_has_address();
  if (address_ == NULL) {
    address_ = new ::fhirbuffs::Address;
  }
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Contact.address)
  return address_;
}
::fhirbuffs::Address* Contact::release_address() {
  clear_has_address();
  ::fhirbuffs::Address* temp = address_;
  address_ = NULL;
  return temp;
}
void Contact::set_allocated_address(::fhirbuffs::Address* address) {
  delete address_;
  address_ = address;
  if (address) {
    set_has_address();
  } else {
    clear_has_address();
  }
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Contact.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Identifier_IdentifierUses_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identifier_IdentifierUses_descriptor_;
}
bool Identifier_IdentifierUses_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Identifier_IdentifierUses Identifier::Usual;
const Identifier_IdentifierUses Identifier::Official;
const Identifier_IdentifierUses Identifier::Temp;
const Identifier_IdentifierUses Identifier::Secondary;
const Identifier_IdentifierUses Identifier::Unknown;
const Identifier_IdentifierUses Identifier::Other;
const Identifier_IdentifierUses Identifier::IdentifierUses_MIN;
const Identifier_IdentifierUses Identifier::IdentifierUses_MAX;
const int Identifier::IdentifierUses_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Identifier::kUseFieldNumber;
const int Identifier::kTypeFieldNumber;
const int Identifier::kSystemFieldNumber;
const int Identifier::kValueFieldNumber;
const int Identifier::kPeriodFieldNumber;
const int Identifier::kAssignerFieldNumber;
#endif  // !_MSC_VER

Identifier::Identifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fhirbuffs.Identifier)
}

void Identifier::InitAsDefaultInstance() {
  period_ = const_cast< ::fhirbuffs::Period*>(&::fhirbuffs::Period::default_instance());
}

Identifier::Identifier(const Identifier& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fhirbuffs.Identifier)
}

void Identifier::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  use_ = 0;
  system_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  period_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identifier::~Identifier() {
  // @@protoc_insertion_point(destructor:fhirbuffs.Identifier)
  SharedDtor();
}

void Identifier::SharedDtor() {
  system_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete period_;
  }
}

void Identifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identifier::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identifier_descriptor_;
}

const Identifier& Identifier::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_primitives_2eproto();
  return *default_instance_;
}

Identifier* Identifier::default_instance_ = NULL;

Identifier* Identifier::New(::google::protobuf::Arena* arena) const {
  Identifier* n = new Identifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Identifier::Clear() {
  if (_has_bits_[0 / 32] & 29u) {
    use_ = 0;
    if (has_system()) {
      system_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_period()) {
      if (period_ != NULL) period_->::fhirbuffs::Period::Clear();
    }
  }
  type_.Clear();
  assigner_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Identifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fhirbuffs.Identifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .fhirbuffs.Identifier.IdentifierUses use = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fhirbuffs::Identifier_IdentifierUses_IsValid(value)) {
            set_use(static_cast< ::fhirbuffs::Identifier_IdentifierUses >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // repeated .fhirbuffs.CodeableConcept type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(input->IncrementRecursionDepth());
         parse_loop_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_type;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_system;
        break;
      }

      // required string system = 3;
      case 3: {
        if (tag == 26) {
         parse_system:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->system().data(), this->system().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Identifier.system");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_value;
        break;
      }

      // required string value = 4;
      case 4: {
        if (tag == 34) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Identifier.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_period;
        break;
      }

      // required .fhirbuffs.Period period = 5;
      case 5: {
        if (tag == 42) {
         parse_period:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_assigner;
        break;
      }

      // repeated .fhirbuffs.Organization assigner = 6;
      case 6: {
        if (tag == 50) {
         parse_assigner:
          DO_(input->IncrementRecursionDepth());
         parse_loop_assigner:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_assigner()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_assigner;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fhirbuffs.Identifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fhirbuffs.Identifier)
  return false;
#undef DO_
}

void Identifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fhirbuffs.Identifier)
  // required .fhirbuffs.Identifier.IdentifierUses use = 1;
  if (has_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->use(), output);
  }

  // repeated .fhirbuffs.CodeableConcept type = 2;
  for (unsigned int i = 0, n = this->type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->type(i), output);
  }

  // required string system = 3;
  if (has_system()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->system().data(), this->system().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Identifier.system");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->system(), output);
  }

  // required string value = 4;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Identifier.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->value(), output);
  }

  // required .fhirbuffs.Period period = 5;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->period_, output);
  }

  // repeated .fhirbuffs.Organization assigner = 6;
  for (unsigned int i = 0, n = this->assigner_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->assigner(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fhirbuffs.Identifier)
}

::google::protobuf::uint8* Identifier::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fhirbuffs.Identifier)
  // required .fhirbuffs.Identifier.IdentifierUses use = 1;
  if (has_use()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->use(), target);
  }

  // repeated .fhirbuffs.CodeableConcept type = 2;
  for (unsigned int i = 0, n = this->type_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->type(i), target);
  }

  // required string system = 3;
  if (has_system()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->system().data(), this->system().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Identifier.system");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->system(), target);
  }

  // required string value = 4;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Identifier.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->value(), target);
  }

  // required .fhirbuffs.Period period = 5;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->period_, target);
  }

  // repeated .fhirbuffs.Organization assigner = 6;
  for (unsigned int i = 0, n = this->assigner_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->assigner(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fhirbuffs.Identifier)
  return target;
}

int Identifier::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_use()) {
    // required .fhirbuffs.Identifier.IdentifierUses use = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->use());
  }

  if (has_system()) {
    // required string system = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system());
  }

  if (has_value()) {
    // required string value = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  if (has_period()) {
    // required .fhirbuffs.Period period = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->period_);
  }

  return total_size;
}
int Identifier::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001d) ^ 0x0000001d) == 0) {  // All required fields are present.
    // required .fhirbuffs.Identifier.IdentifierUses use = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->use());

    // required string system = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system());

    // required string value = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

    // required .fhirbuffs.Period period = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->period_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .fhirbuffs.CodeableConcept type = 2;
  total_size += 1 * this->type_size();
  for (int i = 0; i < this->type_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->type(i));
  }

  // repeated .fhirbuffs.Organization assigner = 6;
  total_size += 1 * this->assigner_size();
  for (int i = 0; i < this->assigner_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->assigner(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identifier::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Identifier* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identifier::MergeFrom(const Identifier& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  type_.MergeFrom(from.type_);
  assigner_.MergeFrom(from.assigner_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_use()) {
      set_use(from.use());
    }
    if (from.has_system()) {
      set_has_system();
      system_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (from.has_period()) {
      mutable_period()->::fhirbuffs::Period::MergeFrom(from.period());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Identifier::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier::CopyFrom(const Identifier& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001d) != 0x0000001d) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->type())) return false;
  if (has_period()) {
    if (!this->period_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->assigner())) return false;
  return true;
}

void Identifier::Swap(Identifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier::InternalSwap(Identifier* other) {
  std::swap(use_, other->use_);
  type_.UnsafeArenaSwap(&other->type_);
  system_.Swap(&other->system_);
  value_.Swap(&other->value_);
  std::swap(period_, other->period_);
  assigner_.UnsafeArenaSwap(&other->assigner_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Identifier::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identifier_descriptor_;
  metadata.reflection = Identifier_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Identifier

// required .fhirbuffs.Identifier.IdentifierUses use = 1;
bool Identifier::has_use() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Identifier::set_has_use() {
  _has_bits_[0] |= 0x00000001u;
}
void Identifier::clear_has_use() {
  _has_bits_[0] &= ~0x00000001u;
}
void Identifier::clear_use() {
  use_ = 0;
  clear_has_use();
}
 ::fhirbuffs::Identifier_IdentifierUses Identifier::use() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Identifier.use)
  return static_cast< ::fhirbuffs::Identifier_IdentifierUses >(use_);
}
 void Identifier::set_use(::fhirbuffs::Identifier_IdentifierUses value) {
  assert(::fhirbuffs::Identifier_IdentifierUses_IsValid(value));
  set_has_use();
  use_ = value;
  // @@protoc_insertion_point(field_set:fhirbuffs.Identifier.use)
}

// repeated .fhirbuffs.CodeableConcept type = 2;
int Identifier::type_size() const {
  return type_.size();
}
void Identifier::clear_type() {
  type_.Clear();
}
const ::fhirbuffs::CodeableConcept& Identifier::type(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Identifier.type)
  return type_.Get(index);
}
::fhirbuffs::CodeableConcept* Identifier::mutable_type(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Identifier.type)
  return type_.Mutable(index);
}
::fhirbuffs::CodeableConcept* Identifier::add_type() {
  // @@protoc_insertion_point(field_add:fhirbuffs.Identifier.type)
  return type_.Add();
}
::google::protobuf::RepeatedPtrField< ::fhirbuffs::CodeableConcept >*
Identifier::mutable_type() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.Identifier.type)
  return &type_;
}
const ::google::protobuf::RepeatedPtrField< ::fhirbuffs::CodeableConcept >&
Identifier::type() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.Identifier.type)
  return type_;
}

// required string system = 3;
bool Identifier::has_system() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Identifier::set_has_system() {
  _has_bits_[0] |= 0x00000004u;
}
void Identifier::clear_has_system() {
  _has_bits_[0] &= ~0x00000004u;
}
void Identifier::clear_system() {
  system_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_system();
}
 const ::std::string& Identifier::system() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Identifier.system)
  return system_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Identifier::set_system(const ::std::string& value) {
  set_has_system();
  system_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Identifier.system)
}
 void Identifier::set_system(const char* value) {
  set_has_system();
  system_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Identifier.system)
}
 void Identifier::set_system(const char* value, size_t size) {
  set_has_system();
  system_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Identifier.system)
}
 ::std::string* Identifier::mutable_system() {
  set_has_system();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Identifier.system)
  return system_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Identifier::release_system() {
  clear_has_system();
  return system_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Identifier::set_allocated_system(::std::string* system) {
  if (system != NULL) {
    set_has_system();
  } else {
    clear_has_system();
  }
  system_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Identifier.system)
}

// required string value = 4;
bool Identifier::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Identifier::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
void Identifier::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
void Identifier::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& Identifier::value() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Identifier.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Identifier::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Identifier.value)
}
 void Identifier::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Identifier.value)
}
 void Identifier::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Identifier.value)
}
 ::std::string* Identifier::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Identifier.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Identifier::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Identifier::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Identifier.value)
}

// required .fhirbuffs.Period period = 5;
bool Identifier::has_period() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Identifier::set_has_period() {
  _has_bits_[0] |= 0x00000010u;
}
void Identifier::clear_has_period() {
  _has_bits_[0] &= ~0x00000010u;
}
void Identifier::clear_period() {
  if (period_ != NULL) period_->::fhirbuffs::Period::Clear();
  clear_has_period();
}
const ::fhirbuffs::Period& Identifier::period() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Identifier.period)
  return period_ != NULL ? *period_ : *default_instance_->period_;
}
::fhirbuffs::Period* Identifier::mutable_period() {
  set_has_period();
  if (period_ == NULL) {
    period_ = new ::fhirbuffs::Period;
  }
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Identifier.period)
  return period_;
}
::fhirbuffs::Period* Identifier::release_period() {
  clear_has_period();
  ::fhirbuffs::Period* temp = period_;
  period_ = NULL;
  return temp;
}
void Identifier::set_allocated_period(::fhirbuffs::Period* period) {
  delete period_;
  period_ = period;
  if (period) {
    set_has_period();
  } else {
    clear_has_period();
  }
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Identifier.period)
}

// repeated .fhirbuffs.Organization assigner = 6;
int Identifier::assigner_size() const {
  return assigner_.size();
}
void Identifier::clear_assigner() {
  assigner_.Clear();
}
const ::fhirbuffs::Organization& Identifier::assigner(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Identifier.assigner)
  return assigner_.Get(index);
}
::fhirbuffs::Organization* Identifier::mutable_assigner(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Identifier.assigner)
  return assigner_.Mutable(index);
}
::fhirbuffs::Organization* Identifier::add_assigner() {
  // @@protoc_insertion_point(field_add:fhirbuffs.Identifier.assigner)
  return assigner_.Add();
}
::google::protobuf::RepeatedPtrField< ::fhirbuffs::Organization >*
Identifier::mutable_assigner() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.Identifier.assigner)
  return &assigner_;
}
const ::google::protobuf::RepeatedPtrField< ::fhirbuffs::Organization >&
Identifier::assigner() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.Identifier.assigner)
  return assigner_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Organization::kIdentifierFieldNumber;
const int Organization::kActiveFieldNumber;
const int Organization::kTypeFieldNumber;
const int Organization::kNameFieldNumber;
const int Organization::kTelecomFieldNumber;
const int Organization::kAddressFieldNumber;
const int Organization::kPartOfFieldNumber;
const int Organization::kContactFieldNumber;
#endif  // !_MSC_VER

Organization::Organization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fhirbuffs.Organization)
}

void Organization::InitAsDefaultInstance() {
  type_ = const_cast< ::fhirbuffs::CodeableConcept*>(&::fhirbuffs::CodeableConcept::default_instance());
  partof_ = const_cast< ::fhirbuffs::Organization*>(&::fhirbuffs::Organization::default_instance());
}

Organization::Organization(const Organization& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fhirbuffs.Organization)
}

void Organization::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  active_ = false;
  type_ = NULL;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partof_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Organization::~Organization() {
  // @@protoc_insertion_point(destructor:fhirbuffs.Organization)
  SharedDtor();
}

void Organization::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete type_;
    delete partof_;
  }
}

void Organization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Organization::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Organization_descriptor_;
}

const Organization& Organization::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_primitives_2eproto();
  return *default_instance_;
}

Organization* Organization::default_instance_ = NULL;

Organization* Organization::New(::google::protobuf::Arena* arena) const {
  Organization* n = new Organization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Organization::Clear() {
  if (_has_bits_[0 / 32] & 78u) {
    active_ = false;
    if (has_type()) {
      if (type_ != NULL) type_->::fhirbuffs::CodeableConcept::Clear();
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_partof()) {
      if (partof_ != NULL) partof_->::fhirbuffs::Organization::Clear();
    }
  }
  identifier_.Clear();
  telecom_.Clear();
  address_.Clear();
  contact_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Organization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fhirbuffs.Organization)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .fhirbuffs.Identifier identifier = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_identifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_identifier;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_active;
        break;
      }

      // required bool active = 2;
      case 2: {
        if (tag == 16) {
         parse_active:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }

      // required .fhirbuffs.CodeableConcept type = 3;
      case 3: {
        if (tag == 26) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // required string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fhirbuffs.Organization.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_telecom;
        break;
      }

      // repeated .fhirbuffs.ContactPoint telecom = 5;
      case 5: {
        if (tag == 42) {
         parse_telecom:
          DO_(input->IncrementRecursionDepth());
         parse_loop_telecom:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_telecom()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_telecom;
        if (input->ExpectTag(50)) goto parse_loop_address;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .fhirbuffs.Address address = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_address;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(58)) goto parse_partOf;
        break;
      }

      // optional .fhirbuffs.Organization partOf = 7;
      case 7: {
        if (tag == 58) {
         parse_partOf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_partof()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_contact;
        break;
      }

      // repeated .fhirbuffs.Contact contact = 8;
      case 8: {
        if (tag == 66) {
         parse_contact:
          DO_(input->IncrementRecursionDepth());
         parse_loop_contact:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_contact()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_contact;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fhirbuffs.Organization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fhirbuffs.Organization)
  return false;
#undef DO_
}

void Organization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fhirbuffs.Organization)
  // repeated .fhirbuffs.Identifier identifier = 1;
  for (unsigned int i = 0, n = this->identifier_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->identifier(i), output);
  }

  // required bool active = 2;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->active(), output);
  }

  // required .fhirbuffs.CodeableConcept type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->type_, output);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Organization.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // repeated .fhirbuffs.ContactPoint telecom = 5;
  for (unsigned int i = 0, n = this->telecom_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->telecom(i), output);
  }

  // repeated .fhirbuffs.Address address = 6;
  for (unsigned int i = 0, n = this->address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->address(i), output);
  }

  // optional .fhirbuffs.Organization partOf = 7;
  if (has_partof()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->partof_, output);
  }

  // repeated .fhirbuffs.Contact contact = 8;
  for (unsigned int i = 0, n = this->contact_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->contact(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fhirbuffs.Organization)
}

::google::protobuf::uint8* Organization::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fhirbuffs.Organization)
  // repeated .fhirbuffs.Identifier identifier = 1;
  for (unsigned int i = 0, n = this->identifier_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->identifier(i), target);
  }

  // required bool active = 2;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->active(), target);
  }

  // required .fhirbuffs.CodeableConcept type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->type_, target);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fhirbuffs.Organization.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // repeated .fhirbuffs.ContactPoint telecom = 5;
  for (unsigned int i = 0, n = this->telecom_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->telecom(i), target);
  }

  // repeated .fhirbuffs.Address address = 6;
  for (unsigned int i = 0, n = this->address_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->address(i), target);
  }

  // optional .fhirbuffs.Organization partOf = 7;
  if (has_partof()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->partof_, target);
  }

  // repeated .fhirbuffs.Contact contact = 8;
  for (unsigned int i = 0, n = this->contact_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->contact(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fhirbuffs.Organization)
  return target;
}

int Organization::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_active()) {
    // required bool active = 2;
    total_size += 1 + 1;
  }

  if (has_type()) {
    // required .fhirbuffs.CodeableConcept type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_);
  }

  if (has_name()) {
    // required string name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int Organization::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required bool active = 2;
    total_size += 1 + 1;

    // required .fhirbuffs.CodeableConcept type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_);

    // required string name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .fhirbuffs.Organization partOf = 7;
  if (has_partof()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->partof_);
  }

  // repeated .fhirbuffs.Identifier identifier = 1;
  total_size += 1 * this->identifier_size();
  for (int i = 0; i < this->identifier_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->identifier(i));
  }

  // repeated .fhirbuffs.ContactPoint telecom = 5;
  total_size += 1 * this->telecom_size();
  for (int i = 0; i < this->telecom_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->telecom(i));
  }

  // repeated .fhirbuffs.Address address = 6;
  total_size += 1 * this->address_size();
  for (int i = 0; i < this->address_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->address(i));
  }

  // repeated .fhirbuffs.Contact contact = 8;
  total_size += 1 * this->contact_size();
  for (int i = 0; i < this->contact_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->contact(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Organization::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Organization* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Organization>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Organization::MergeFrom(const Organization& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  identifier_.MergeFrom(from.identifier_);
  telecom_.MergeFrom(from.telecom_);
  address_.MergeFrom(from.address_);
  contact_.MergeFrom(from.contact_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_type()) {
      mutable_type()->::fhirbuffs::CodeableConcept::MergeFrom(from.type());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_partof()) {
      mutable_partof()->::fhirbuffs::Organization::MergeFrom(from.partof());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Organization::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Organization::CopyFrom(const Organization& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Organization::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->identifier())) return false;
  if (has_type()) {
    if (!this->type_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->telecom())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->address())) return false;
  if (has_partof()) {
    if (!this->partof_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->contact())) return false;
  return true;
}

void Organization::Swap(Organization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Organization::InternalSwap(Organization* other) {
  identifier_.UnsafeArenaSwap(&other->identifier_);
  std::swap(active_, other->active_);
  std::swap(type_, other->type_);
  name_.Swap(&other->name_);
  telecom_.UnsafeArenaSwap(&other->telecom_);
  address_.UnsafeArenaSwap(&other->address_);
  std::swap(partof_, other->partof_);
  contact_.UnsafeArenaSwap(&other->contact_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Organization::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Organization_descriptor_;
  metadata.reflection = Organization_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Organization

// repeated .fhirbuffs.Identifier identifier = 1;
int Organization::identifier_size() const {
  return identifier_.size();
}
void Organization::clear_identifier() {
  identifier_.Clear();
}
const ::fhirbuffs::Identifier& Organization::identifier(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Organization.identifier)
  return identifier_.Get(index);
}
::fhirbuffs::Identifier* Organization::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Organization.identifier)
  return identifier_.Mutable(index);
}
::fhirbuffs::Identifier* Organization::add_identifier() {
  // @@protoc_insertion_point(field_add:fhirbuffs.Organization.identifier)
  return identifier_.Add();
}
::google::protobuf::RepeatedPtrField< ::fhirbuffs::Identifier >*
Organization::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.Organization.identifier)
  return &identifier_;
}
const ::google::protobuf::RepeatedPtrField< ::fhirbuffs::Identifier >&
Organization::identifier() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.Organization.identifier)
  return identifier_;
}

// required bool active = 2;
bool Organization::has_active() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Organization::set_has_active() {
  _has_bits_[0] |= 0x00000002u;
}
void Organization::clear_has_active() {
  _has_bits_[0] &= ~0x00000002u;
}
void Organization::clear_active() {
  active_ = false;
  clear_has_active();
}
 bool Organization::active() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Organization.active)
  return active_;
}
 void Organization::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:fhirbuffs.Organization.active)
}

// required .fhirbuffs.CodeableConcept type = 3;
bool Organization::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Organization::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void Organization::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void Organization::clear_type() {
  if (type_ != NULL) type_->::fhirbuffs::CodeableConcept::Clear();
  clear_has_type();
}
const ::fhirbuffs::CodeableConcept& Organization::type() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Organization.type)
  return type_ != NULL ? *type_ : *default_instance_->type_;
}
::fhirbuffs::CodeableConcept* Organization::mutable_type() {
  set_has_type();
  if (type_ == NULL) {
    type_ = new ::fhirbuffs::CodeableConcept;
  }
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Organization.type)
  return type_;
}
::fhirbuffs::CodeableConcept* Organization::release_type() {
  clear_has_type();
  ::fhirbuffs::CodeableConcept* temp = type_;
  type_ = NULL;
  return temp;
}
void Organization::set_allocated_type(::fhirbuffs::CodeableConcept* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Organization.type)
}

// required string name = 4;
bool Organization::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Organization::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
void Organization::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void Organization::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Organization::name() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Organization.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Organization::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fhirbuffs.Organization.name)
}
 void Organization::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fhirbuffs.Organization.name)
}
 void Organization::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fhirbuffs.Organization.name)
}
 ::std::string* Organization::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Organization.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Organization::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Organization::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Organization.name)
}

// repeated .fhirbuffs.ContactPoint telecom = 5;
int Organization::telecom_size() const {
  return telecom_.size();
}
void Organization::clear_telecom() {
  telecom_.Clear();
}
const ::fhirbuffs::ContactPoint& Organization::telecom(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Organization.telecom)
  return telecom_.Get(index);
}
::fhirbuffs::ContactPoint* Organization::mutable_telecom(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Organization.telecom)
  return telecom_.Mutable(index);
}
::fhirbuffs::ContactPoint* Organization::add_telecom() {
  // @@protoc_insertion_point(field_add:fhirbuffs.Organization.telecom)
  return telecom_.Add();
}
::google::protobuf::RepeatedPtrField< ::fhirbuffs::ContactPoint >*
Organization::mutable_telecom() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.Organization.telecom)
  return &telecom_;
}
const ::google::protobuf::RepeatedPtrField< ::fhirbuffs::ContactPoint >&
Organization::telecom() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.Organization.telecom)
  return telecom_;
}

// repeated .fhirbuffs.Address address = 6;
int Organization::address_size() const {
  return address_.size();
}
void Organization::clear_address() {
  address_.Clear();
}
const ::fhirbuffs::Address& Organization::address(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Organization.address)
  return address_.Get(index);
}
::fhirbuffs::Address* Organization::mutable_address(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Organization.address)
  return address_.Mutable(index);
}
::fhirbuffs::Address* Organization::add_address() {
  // @@protoc_insertion_point(field_add:fhirbuffs.Organization.address)
  return address_.Add();
}
::google::protobuf::RepeatedPtrField< ::fhirbuffs::Address >*
Organization::mutable_address() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.Organization.address)
  return &address_;
}
const ::google::protobuf::RepeatedPtrField< ::fhirbuffs::Address >&
Organization::address() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.Organization.address)
  return address_;
}

// optional .fhirbuffs.Organization partOf = 7;
bool Organization::has_partof() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Organization::set_has_partof() {
  _has_bits_[0] |= 0x00000040u;
}
void Organization::clear_has_partof() {
  _has_bits_[0] &= ~0x00000040u;
}
void Organization::clear_partof() {
  if (partof_ != NULL) partof_->::fhirbuffs::Organization::Clear();
  clear_has_partof();
}
const ::fhirbuffs::Organization& Organization::partof() const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Organization.partOf)
  return partof_ != NULL ? *partof_ : *default_instance_->partof_;
}
::fhirbuffs::Organization* Organization::mutable_partof() {
  set_has_partof();
  if (partof_ == NULL) {
    partof_ = new ::fhirbuffs::Organization;
  }
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Organization.partOf)
  return partof_;
}
::fhirbuffs::Organization* Organization::release_partof() {
  clear_has_partof();
  ::fhirbuffs::Organization* temp = partof_;
  partof_ = NULL;
  return temp;
}
void Organization::set_allocated_partof(::fhirbuffs::Organization* partof) {
  delete partof_;
  partof_ = partof;
  if (partof) {
    set_has_partof();
  } else {
    clear_has_partof();
  }
  // @@protoc_insertion_point(field_set_allocated:fhirbuffs.Organization.partOf)
}

// repeated .fhirbuffs.Contact contact = 8;
int Organization::contact_size() const {
  return contact_.size();
}
void Organization::clear_contact() {
  contact_.Clear();
}
const ::fhirbuffs::Contact& Organization::contact(int index) const {
  // @@protoc_insertion_point(field_get:fhirbuffs.Organization.contact)
  return contact_.Get(index);
}
::fhirbuffs::Contact* Organization::mutable_contact(int index) {
  // @@protoc_insertion_point(field_mutable:fhirbuffs.Organization.contact)
  return contact_.Mutable(index);
}
::fhirbuffs::Contact* Organization::add_contact() {
  // @@protoc_insertion_point(field_add:fhirbuffs.Organization.contact)
  return contact_.Add();
}
::google::protobuf::RepeatedPtrField< ::fhirbuffs::Contact >*
Organization::mutable_contact() {
  // @@protoc_insertion_point(field_mutable_list:fhirbuffs.Organization.contact)
  return &contact_;
}
const ::google::protobuf::RepeatedPtrField< ::fhirbuffs::Contact >&
Organization::contact() const {
  // @@protoc_insertion_point(field_list:fhirbuffs.Organization.contact)
  return contact_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace fhirbuffs

// @@protoc_insertion_point(global_scope)
