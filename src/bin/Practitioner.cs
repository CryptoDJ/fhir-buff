// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: practitioner.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Fhirbuffs {

  namespace Proto {

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Practitioner {

      #region Descriptor
      public static pbr::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbr::FileDescriptor descriptor;

      static Practitioner() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "ChJwcmFjdGl0aW9uZXIucHJvdG8SCWZoaXJidWZmcxoQcHJpbWl0aXZlcy5w",
              "cm90bxoObG9jYXRpb24ucHJvdG8aF2hlYWx0aGNhcmVzZXJ2aWNlLnByb3Rv",
              "IqUCChBQcmFjdGl0aW9uZXJSb2xlEjUKFG1hbmFnaW5nT3JnYW5pemF0aW9u",
              "GAEgASgLMhcuZmhpcmJ1ZmZzLk9yZ2FuaXphdGlvbhIoCgRyb2xlGAIgASgL",
              "MhouZmhpcmJ1ZmZzLkNvZGVhYmxlQ29uY2VwdBItCglzcGVjaWFsdHkYAyAD",
              "KAsyGi5maGlyYnVmZnMuQ29kZWFibGVDb25jZXB0EiEKBnBlcmlvZBgEIAEo",
              "CzIRLmZoaXJidWZmcy5QZXJpb2QSJQoIbG9jYXRpb24YBSADKAsyEy5maGly",
              "YnVmZnMuTG9jYXRpb24SNwoRaGVhbHRoY2FyZVNlcnZpY2UYBiABKAsyHC5m",
              "aGlyYnVmZnMuSGVhbHRoY2FyZVNlcnZpY2UixQMKDFByYWN0aXRpb25lchIp",
              "CgppZGVudGlmaWVyGAEgAygLMhUuZmhpcmJ1ZmZzLklkZW50aWZpZXISDgoG",
              "YWN0aXZlGAIgASgIEiIKBG5hbWUYAyABKAsyFC5maGlyYnVmZnMuSHVtYW5O",
              "YW1lEigKB3RlbGVjb20YBCADKAsyFy5maGlyYnVmZnMuQ29udGFjdFBvaW50",
              "EiMKB2FkZHJlc3MYBSADKAsyEi5maGlyYnVmZnMuQWRkcmVzcxIhCgZnZW5k",
              "ZXIYBiABKA4yES5maGlyYnVmZnMuR2VuZGVyEiIKCWJpcnRoRGF0ZRgHIAEo",
              "CzIPLmZoaXJidWZmcy5EYXRlEiQKBXBob3RvGAggAygLMhUuZmhpcmJ1ZmZz",
              "LkF0dGFjaG1lbnQSNQoQcHJhY3RpdGlvbmVyUm9sZRgJIAMoCzIbLmZoaXJi",
              "dWZmcy5QcmFjdGl0aW9uZXJSb2xlEjAKDXF1YWxpZmljYXRpb24YCiADKAsy",
              "GS5maGlyYnVmZnMuUXVhbGlmaWNhdGlvbnMSMQoNY29tbXVuaWNhdGlvbhgL",
              "IAMoCzIaLmZoaXJidWZmcy5Db2RlYWJsZUNvbmNlcHRiBnByb3RvMw=="));
        descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbr::FileDescriptor[] { global::Fhirbuffs.Primitives.Descriptor, global::Fhirbuffs.Proto.Location.Descriptor, global::Fhirbuffs.Healthcareservice.Descriptor, },
            new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
              new pbr::GeneratedCodeInfo(typeof(global::Fhirbuffs.PractitionerRole), new[]{ "ManagingOrganization", "Role", "Specialty", "Period", "Location", "HealthcareService" }, null, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Fhirbuffs.Practitioner), new[]{ "Identifier", "Active", "Name", "Telecom", "Address", "Gender", "BirthDate", "Photo", "PractitionerRole", "Qualification", "Communication" }, null, null, null)
            }));
      }
      #endregion

    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PractitionerRole : pb::IMessage<PractitionerRole> {
    private static readonly pb::MessageParser<PractitionerRole> _parser = new pb::MessageParser<PractitionerRole>(() => new PractitionerRole());
    public static pb::MessageParser<PractitionerRole> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fhirbuffs.Proto.Practitioner.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PractitionerRole() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PractitionerRole(PractitionerRole other) : this() {
      ManagingOrganization = other.managingOrganization_ != null ? other.ManagingOrganization.Clone() : null;
      Role = other.role_ != null ? other.Role.Clone() : null;
      specialty_ = other.specialty_.Clone();
      Period = other.period_ != null ? other.Period.Clone() : null;
      location_ = other.location_.Clone();
      HealthcareService = other.healthcareService_ != null ? other.HealthcareService.Clone() : null;
    }

    public PractitionerRole Clone() {
      return new PractitionerRole(this);
    }

    public const int ManagingOrganizationFieldNumber = 1;
    private global::Fhirbuffs.Organization managingOrganization_;
    public global::Fhirbuffs.Organization ManagingOrganization {
      get { return managingOrganization_; }
      set {
        managingOrganization_ = value;
      }
    }

    public const int RoleFieldNumber = 2;
    private global::Fhirbuffs.CodeableConcept role_;
    public global::Fhirbuffs.CodeableConcept Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    public const int SpecialtyFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Fhirbuffs.CodeableConcept> _repeated_specialty_codec
        = pb::FieldCodec.ForMessage(26, global::Fhirbuffs.CodeableConcept.Parser);
    private readonly pbc::RepeatedField<global::Fhirbuffs.CodeableConcept> specialty_ = new pbc::RepeatedField<global::Fhirbuffs.CodeableConcept>();
    public pbc::RepeatedField<global::Fhirbuffs.CodeableConcept> Specialty {
      get { return specialty_; }
    }

    public const int PeriodFieldNumber = 4;
    private global::Fhirbuffs.Period period_;
    public global::Fhirbuffs.Period Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    public const int LocationFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Fhirbuffs.Location> _repeated_location_codec
        = pb::FieldCodec.ForMessage(42, global::Fhirbuffs.Location.Parser);
    private readonly pbc::RepeatedField<global::Fhirbuffs.Location> location_ = new pbc::RepeatedField<global::Fhirbuffs.Location>();
    public pbc::RepeatedField<global::Fhirbuffs.Location> Location {
      get { return location_; }
    }

    public const int HealthcareServiceFieldNumber = 6;
    private global::Fhirbuffs.HealthcareService healthcareService_;
    public global::Fhirbuffs.HealthcareService HealthcareService {
      get { return healthcareService_; }
      set {
        healthcareService_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as PractitionerRole);
    }

    public bool Equals(PractitionerRole other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ManagingOrganization, other.ManagingOrganization)) return false;
      if (!object.Equals(Role, other.Role)) return false;
      if(!specialty_.Equals(other.specialty_)) return false;
      if (!object.Equals(Period, other.Period)) return false;
      if(!location_.Equals(other.location_)) return false;
      if (!object.Equals(HealthcareService, other.HealthcareService)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (managingOrganization_ != null) hash ^= ManagingOrganization.GetHashCode();
      if (role_ != null) hash ^= Role.GetHashCode();
      hash ^= specialty_.GetHashCode();
      if (period_ != null) hash ^= Period.GetHashCode();
      hash ^= location_.GetHashCode();
      if (healthcareService_ != null) hash ^= HealthcareService.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (managingOrganization_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ManagingOrganization);
      }
      if (role_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Role);
      }
      specialty_.WriteTo(output, _repeated_specialty_codec);
      if (period_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Period);
      }
      location_.WriteTo(output, _repeated_location_codec);
      if (healthcareService_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HealthcareService);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (managingOrganization_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ManagingOrganization);
      }
      if (role_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Role);
      }
      size += specialty_.CalculateSize(_repeated_specialty_codec);
      if (period_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Period);
      }
      size += location_.CalculateSize(_repeated_location_codec);
      if (healthcareService_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HealthcareService);
      }
      return size;
    }

    public void MergeFrom(PractitionerRole other) {
      if (other == null) {
        return;
      }
      if (other.managingOrganization_ != null) {
        if (managingOrganization_ == null) {
          managingOrganization_ = new global::Fhirbuffs.Organization();
        }
        ManagingOrganization.MergeFrom(other.ManagingOrganization);
      }
      if (other.role_ != null) {
        if (role_ == null) {
          role_ = new global::Fhirbuffs.CodeableConcept();
        }
        Role.MergeFrom(other.Role);
      }
      specialty_.Add(other.specialty_);
      if (other.period_ != null) {
        if (period_ == null) {
          period_ = new global::Fhirbuffs.Period();
        }
        Period.MergeFrom(other.Period);
      }
      location_.Add(other.location_);
      if (other.healthcareService_ != null) {
        if (healthcareService_ == null) {
          healthcareService_ = new global::Fhirbuffs.HealthcareService();
        }
        HealthcareService.MergeFrom(other.HealthcareService);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (managingOrganization_ == null) {
              managingOrganization_ = new global::Fhirbuffs.Organization();
            }
            input.ReadMessage(managingOrganization_);
            break;
          }
          case 18: {
            if (role_ == null) {
              role_ = new global::Fhirbuffs.CodeableConcept();
            }
            input.ReadMessage(role_);
            break;
          }
          case 26: {
            specialty_.AddEntriesFrom(input, _repeated_specialty_codec);
            break;
          }
          case 34: {
            if (period_ == null) {
              period_ = new global::Fhirbuffs.Period();
            }
            input.ReadMessage(period_);
            break;
          }
          case 42: {
            location_.AddEntriesFrom(input, _repeated_location_codec);
            break;
          }
          case 50: {
            if (healthcareService_ == null) {
              healthcareService_ = new global::Fhirbuffs.HealthcareService();
            }
            input.ReadMessage(healthcareService_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Practitioner : pb::IMessage<Practitioner> {
    private static readonly pb::MessageParser<Practitioner> _parser = new pb::MessageParser<Practitioner>(() => new Practitioner());
    public static pb::MessageParser<Practitioner> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fhirbuffs.Proto.Practitioner.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Practitioner() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Practitioner(Practitioner other) : this() {
      identifier_ = other.identifier_.Clone();
      active_ = other.active_;
      Name = other.name_ != null ? other.Name.Clone() : null;
      telecom_ = other.telecom_.Clone();
      address_ = other.address_.Clone();
      gender_ = other.gender_;
      BirthDate = other.birthDate_ != null ? other.BirthDate.Clone() : null;
      photo_ = other.photo_.Clone();
      practitionerRole_ = other.practitionerRole_.Clone();
      qualification_ = other.qualification_.Clone();
      communication_ = other.communication_.Clone();
    }

    public Practitioner Clone() {
      return new Practitioner(this);
    }

    public const int IdentifierFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Fhirbuffs.Identifier> _repeated_identifier_codec
        = pb::FieldCodec.ForMessage(10, global::Fhirbuffs.Identifier.Parser);
    private readonly pbc::RepeatedField<global::Fhirbuffs.Identifier> identifier_ = new pbc::RepeatedField<global::Fhirbuffs.Identifier>();
    public pbc::RepeatedField<global::Fhirbuffs.Identifier> Identifier {
      get { return identifier_; }
    }

    public const int ActiveFieldNumber = 2;
    private bool active_;
    public bool Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    public const int NameFieldNumber = 3;
    private global::Fhirbuffs.HumanName name_;
    public global::Fhirbuffs.HumanName Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    public const int TelecomFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Fhirbuffs.ContactPoint> _repeated_telecom_codec
        = pb::FieldCodec.ForMessage(34, global::Fhirbuffs.ContactPoint.Parser);
    private readonly pbc::RepeatedField<global::Fhirbuffs.ContactPoint> telecom_ = new pbc::RepeatedField<global::Fhirbuffs.ContactPoint>();
    public pbc::RepeatedField<global::Fhirbuffs.ContactPoint> Telecom {
      get { return telecom_; }
    }

    public const int AddressFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Fhirbuffs.Address> _repeated_address_codec
        = pb::FieldCodec.ForMessage(42, global::Fhirbuffs.Address.Parser);
    private readonly pbc::RepeatedField<global::Fhirbuffs.Address> address_ = new pbc::RepeatedField<global::Fhirbuffs.Address>();
    public pbc::RepeatedField<global::Fhirbuffs.Address> Address {
      get { return address_; }
    }

    public const int GenderFieldNumber = 6;
    private global::Fhirbuffs.Gender gender_ = global::Fhirbuffs.Gender.male;
    public global::Fhirbuffs.Gender Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    public const int BirthDateFieldNumber = 7;
    private global::Fhirbuffs.Date birthDate_;
    public global::Fhirbuffs.Date BirthDate {
      get { return birthDate_; }
      set {
        birthDate_ = value;
      }
    }

    public const int PhotoFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Fhirbuffs.Attachment> _repeated_photo_codec
        = pb::FieldCodec.ForMessage(66, global::Fhirbuffs.Attachment.Parser);
    private readonly pbc::RepeatedField<global::Fhirbuffs.Attachment> photo_ = new pbc::RepeatedField<global::Fhirbuffs.Attachment>();
    public pbc::RepeatedField<global::Fhirbuffs.Attachment> Photo {
      get { return photo_; }
    }

    public const int PractitionerRoleFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Fhirbuffs.PractitionerRole> _repeated_practitionerRole_codec
        = pb::FieldCodec.ForMessage(74, global::Fhirbuffs.PractitionerRole.Parser);
    private readonly pbc::RepeatedField<global::Fhirbuffs.PractitionerRole> practitionerRole_ = new pbc::RepeatedField<global::Fhirbuffs.PractitionerRole>();
    public pbc::RepeatedField<global::Fhirbuffs.PractitionerRole> PractitionerRole {
      get { return practitionerRole_; }
    }

    public const int QualificationFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Fhirbuffs.Qualifications> _repeated_qualification_codec
        = pb::FieldCodec.ForMessage(82, global::Fhirbuffs.Qualifications.Parser);
    private readonly pbc::RepeatedField<global::Fhirbuffs.Qualifications> qualification_ = new pbc::RepeatedField<global::Fhirbuffs.Qualifications>();
    public pbc::RepeatedField<global::Fhirbuffs.Qualifications> Qualification {
      get { return qualification_; }
    }

    public const int CommunicationFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Fhirbuffs.CodeableConcept> _repeated_communication_codec
        = pb::FieldCodec.ForMessage(90, global::Fhirbuffs.CodeableConcept.Parser);
    private readonly pbc::RepeatedField<global::Fhirbuffs.CodeableConcept> communication_ = new pbc::RepeatedField<global::Fhirbuffs.CodeableConcept>();
    public pbc::RepeatedField<global::Fhirbuffs.CodeableConcept> Communication {
      get { return communication_; }
    }

    public override bool Equals(object other) {
      return Equals(other as Practitioner);
    }

    public bool Equals(Practitioner other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!identifier_.Equals(other.identifier_)) return false;
      if (Active != other.Active) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if(!telecom_.Equals(other.telecom_)) return false;
      if(!address_.Equals(other.address_)) return false;
      if (Gender != other.Gender) return false;
      if (!object.Equals(BirthDate, other.BirthDate)) return false;
      if(!photo_.Equals(other.photo_)) return false;
      if(!practitionerRole_.Equals(other.practitionerRole_)) return false;
      if(!qualification_.Equals(other.qualification_)) return false;
      if(!communication_.Equals(other.communication_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= identifier_.GetHashCode();
      if (Active != false) hash ^= Active.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      hash ^= telecom_.GetHashCode();
      hash ^= address_.GetHashCode();
      if (Gender != global::Fhirbuffs.Gender.male) hash ^= Gender.GetHashCode();
      if (birthDate_ != null) hash ^= BirthDate.GetHashCode();
      hash ^= photo_.GetHashCode();
      hash ^= practitionerRole_.GetHashCode();
      hash ^= qualification_.GetHashCode();
      hash ^= communication_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      identifier_.WriteTo(output, _repeated_identifier_codec);
      if (Active != false) {
        output.WriteRawTag(16);
        output.WriteBool(Active);
      }
      if (name_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Name);
      }
      telecom_.WriteTo(output, _repeated_telecom_codec);
      address_.WriteTo(output, _repeated_address_codec);
      if (Gender != global::Fhirbuffs.Gender.male) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Gender);
      }
      if (birthDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(BirthDate);
      }
      photo_.WriteTo(output, _repeated_photo_codec);
      practitionerRole_.WriteTo(output, _repeated_practitionerRole_codec);
      qualification_.WriteTo(output, _repeated_qualification_codec);
      communication_.WriteTo(output, _repeated_communication_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += identifier_.CalculateSize(_repeated_identifier_codec);
      if (Active != false) {
        size += 1 + 1;
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      size += telecom_.CalculateSize(_repeated_telecom_codec);
      size += address_.CalculateSize(_repeated_address_codec);
      if (Gender != global::Fhirbuffs.Gender.male) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Gender);
      }
      if (birthDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BirthDate);
      }
      size += photo_.CalculateSize(_repeated_photo_codec);
      size += practitionerRole_.CalculateSize(_repeated_practitionerRole_codec);
      size += qualification_.CalculateSize(_repeated_qualification_codec);
      size += communication_.CalculateSize(_repeated_communication_codec);
      return size;
    }

    public void MergeFrom(Practitioner other) {
      if (other == null) {
        return;
      }
      identifier_.Add(other.identifier_);
      if (other.Active != false) {
        Active = other.Active;
      }
      if (other.name_ != null) {
        if (name_ == null) {
          name_ = new global::Fhirbuffs.HumanName();
        }
        Name.MergeFrom(other.Name);
      }
      telecom_.Add(other.telecom_);
      address_.Add(other.address_);
      if (other.Gender != global::Fhirbuffs.Gender.male) {
        Gender = other.Gender;
      }
      if (other.birthDate_ != null) {
        if (birthDate_ == null) {
          birthDate_ = new global::Fhirbuffs.Date();
        }
        BirthDate.MergeFrom(other.BirthDate);
      }
      photo_.Add(other.photo_);
      practitionerRole_.Add(other.practitionerRole_);
      qualification_.Add(other.qualification_);
      communication_.Add(other.communication_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            identifier_.AddEntriesFrom(input, _repeated_identifier_codec);
            break;
          }
          case 16: {
            Active = input.ReadBool();
            break;
          }
          case 26: {
            if (name_ == null) {
              name_ = new global::Fhirbuffs.HumanName();
            }
            input.ReadMessage(name_);
            break;
          }
          case 34: {
            telecom_.AddEntriesFrom(input, _repeated_telecom_codec);
            break;
          }
          case 42: {
            address_.AddEntriesFrom(input, _repeated_address_codec);
            break;
          }
          case 48: {
            gender_ = (global::Fhirbuffs.Gender) input.ReadEnum();
            break;
          }
          case 58: {
            if (birthDate_ == null) {
              birthDate_ = new global::Fhirbuffs.Date();
            }
            input.ReadMessage(birthDate_);
            break;
          }
          case 66: {
            photo_.AddEntriesFrom(input, _repeated_photo_codec);
            break;
          }
          case 74: {
            practitionerRole_.AddEntriesFrom(input, _repeated_practitionerRole_codec);
            break;
          }
          case 82: {
            qualification_.AddEntriesFrom(input, _repeated_qualification_codec);
            break;
          }
          case 90: {
            communication_.AddEntriesFrom(input, _repeated_communication_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
