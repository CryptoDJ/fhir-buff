// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: healthcareservice.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "Healthcareservice.pbobjc.h"
#import "Primitives.pbobjc.h"
#import "Location.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - HealthcareserviceRoot

@implementation HealthcareserviceRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[PrimitivesRoot extensionRegistry]];
    [registry addExtensions:[LocationRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - HealthcareserviceRoot_FileDescriptor

static GPBFileDescriptor *HealthcareserviceRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"fhirbuffs"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - HealthcareService

@implementation HealthcareService

@dynamic identifierArray, identifierArray_Count;
@dynamic hasProvidedBy, providedBy;
@dynamic hasServiceCategory, serviceCategory;
@dynamic serviceTypeArray, serviceTypeArray_Count;
@dynamic hasLocation, location;
@dynamic serviceName;
@dynamic comment;
@dynamic extraDetails;
@dynamic hasPhoto, photo;
@dynamic telecomArray, telecomArray_Count;
@dynamic coverageAreaArray, coverageAreaArray_Count;
@dynamic serviceProvisionCodeArray, serviceProvisionCodeArray_Count;
@dynamic hasEligibility, eligibility;
@dynamic eligibilityNote;
@dynamic programNameArray, programNameArray_Count;
@dynamic characteristicArray, characteristicArray_Count;
@dynamic referralMethodArray, referralMethodArray_Count;
@dynamic publicKey;
@dynamic appointmentRequired;
@dynamic hasAvailableTime, availableTime;
@dynamic hasNotAvailable, notAvailable;
@dynamic availabilityExceptions;

typedef struct HealthcareService__storage_ {
  uint32_t _has_storage_[1];
  BOOL appointmentRequired;
  NSMutableArray *identifierArray;
  Organization *providedBy;
  CodeableConcept *serviceCategory;
  NSMutableArray *serviceTypeArray;
  Location *location;
  NSString *serviceName;
  NSString *comment;
  NSString *extraDetails;
  Attachment *photo;
  NSMutableArray *telecomArray;
  NSMutableArray *coverageAreaArray;
  NSMutableArray *serviceProvisionCodeArray;
  CodeableConcept *eligibility;
  NSString *eligibilityNote;
  NSMutableArray *programNameArray;
  NSMutableArray *characteristicArray;
  NSMutableArray *referralMethodArray;
  NSString *publicKey;
  AvailableTime *availableTime;
  NotAvailableTime *notAvailable;
  NSString *availabilityExceptions;
} HealthcareService__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "identifierArray",
        .number = HealthcareService_FieldNumber_IdentifierArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, identifierArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(Identifier),
        .fieldOptions = NULL,
      },
      {
        .name = "providedBy",
        .number = HealthcareService_FieldNumber_ProvidedBy,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, providedBy),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(Organization),
        .fieldOptions = NULL,
      },
      {
        .name = "serviceCategory",
        .number = HealthcareService_FieldNumber_ServiceCategory,
        .hasIndex = 2,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, serviceCategory),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(CodeableConcept),
        .fieldOptions = NULL,
      },
      {
        .name = "serviceTypeArray",
        .number = HealthcareService_FieldNumber_ServiceTypeArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, serviceTypeArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(ServiceType),
        .fieldOptions = NULL,
      },
      {
        .name = "location",
        .number = HealthcareService_FieldNumber_Location,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, location),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(Location),
        .fieldOptions = NULL,
      },
      {
        .name = "serviceName",
        .number = HealthcareService_FieldNumber_ServiceName,
        .hasIndex = 5,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(HealthcareService__storage_, serviceName),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "comment",
        .number = HealthcareService_FieldNumber_Comment,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(HealthcareService__storage_, comment),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "extraDetails",
        .number = HealthcareService_FieldNumber_ExtraDetails,
        .hasIndex = 7,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(HealthcareService__storage_, extraDetails),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "photo",
        .number = HealthcareService_FieldNumber_Photo,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, photo),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(Attachment),
        .fieldOptions = NULL,
      },
      {
        .name = "telecomArray",
        .number = HealthcareService_FieldNumber_TelecomArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, telecomArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(ContactPoint),
        .fieldOptions = NULL,
      },
      {
        .name = "coverageAreaArray",
        .number = HealthcareService_FieldNumber_CoverageAreaArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, coverageAreaArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(Location),
        .fieldOptions = NULL,
      },
      {
        .name = "serviceProvisionCodeArray",
        .number = HealthcareService_FieldNumber_ServiceProvisionCodeArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, serviceProvisionCodeArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(CodeableConcept),
        .fieldOptions = NULL,
      },
      {
        .name = "eligibility",
        .number = HealthcareService_FieldNumber_Eligibility,
        .hasIndex = 12,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, eligibility),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(CodeableConcept),
        .fieldOptions = NULL,
      },
      {
        .name = "eligibilityNote",
        .number = HealthcareService_FieldNumber_EligibilityNote,
        .hasIndex = 13,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(HealthcareService__storage_, eligibilityNote),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "programNameArray",
        .number = HealthcareService_FieldNumber_ProgramNameArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(HealthcareService__storage_, programNameArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "characteristicArray",
        .number = HealthcareService_FieldNumber_CharacteristicArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, characteristicArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(CodeableConcept),
        .fieldOptions = NULL,
      },
      {
        .name = "referralMethodArray",
        .number = HealthcareService_FieldNumber_ReferralMethodArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, referralMethodArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(CodeableConcept),
        .fieldOptions = NULL,
      },
      {
        .name = "publicKey",
        .number = HealthcareService_FieldNumber_PublicKey,
        .hasIndex = 17,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(HealthcareService__storage_, publicKey),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "appointmentRequired",
        .number = HealthcareService_FieldNumber_AppointmentRequired,
        .hasIndex = 18,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(HealthcareService__storage_, appointmentRequired),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "availableTime",
        .number = HealthcareService_FieldNumber_AvailableTime,
        .hasIndex = 19,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, availableTime),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(AvailableTime),
        .fieldOptions = NULL,
      },
      {
        .name = "notAvailable",
        .number = HealthcareService_FieldNumber_NotAvailable,
        .hasIndex = 20,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(HealthcareService__storage_, notAvailable),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(NotAvailableTime),
        .fieldOptions = NULL,
      },
      {
        .name = "availabilityExceptions",
        .number = HealthcareService_FieldNumber_AvailabilityExceptions,
        .hasIndex = 21,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(HealthcareService__storage_, availabilityExceptions),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\017\002\n\000\003\017\000\004\000serviceType\000\006\013\000\010\014\000\013\000coverageArea\000\014\000serviceProvisionCode\000\016\017\000\017\000programName\000\021\000referralMethod\000\022\t\000\023\023\000\024\r\000\025\014\000\026\026\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[HealthcareService class]
                                     rootClass:[HealthcareserviceRoot class]
                                          file:HealthcareserviceRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(HealthcareService__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
